A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE     1


MACRO ASSEMBLER A51 V7.01
NO OBJECT MODULE REQUESTED
ASSEMBLER INVOKED BY: C:\Keil51\C51\BIN\A51.EXE .\Debug\Output\ISO7816_Main.src PR(.\Debug\List\ISO7816_Main.ls1) EP DEBUG

LOC  OBJ            LINE     SOURCE

                       1     ; .\Debug\Output\ISO7816_Main.SRC generated from: ISO7816\ISO7816_Main.c
                       2     ; COMPILER INVOKED BY:
                       3     ;        C:\Keil51\C51\BIN\C51.EXE ISO7816\ISO7816_Main.c LARGE OMF2 OPTIMIZE(0,SIZE) REGFI
                             LE(.\Debug\Output\Yggdrasil20.ORC) BROWSE NOINTVECTOR DEBUG PRINT(.\Debug\List\ISO7816_Main
                             .lst) SRC(.\Debug\Output\ISO7816_Main.SRC)
                       4     
                       5     $nomod51 
                       6     
                       7     NAME    ISO7816_MAIN
                       8     
  00DC                 9     UIMSK   DATA    0DCH
  00E9                10     FL_SDP1 DATA    0E9H
  00EA                11     FL_SDP2 DATA    0EAH
  0083                12     DPH0    DATA    083H
  00AB                13     IE_INT3 BIT     0A8H.3
  00A8                14     IE      DATA    0A8H
  0085                15     DPH1    DATA    085H
  00AD                16     IE_INT5 BIT     0A8H.5
  0082                17     DPL0    DATA    082H
  0084                18     DPL1    DATA    084H
  00A9                19     IE_TMR0 BIT     0A8H.1
  00C3                20     DES_END BIT     0C0H.3
  00B8                21     IP      DATA    0B8H
  00DE                22     UCR2    DATA    0DEH
  00DD                23     UCR3    DATA    0DDH
  00EA                24     FL_STS_F_CHKFF_ERR      BIT     0E8H.2
  0081                25     SP      DATA    081H
  00C5                26     DES_DATEN       BIT     0C0H.5
  00AA                27     IE_UART BIT     0A8H.2
  00DA                28     UBRC    DATA    0DAH
  0087                29     PCON    DATA    087H
  00E8                30     FL_STS_F_OVER   BIT     0E8H.0
  00C2                31     CRCDAT  DATA    0C2H
  00D9                32     UBUF    DATA    0D9H
  0089                33     TMOD    DATA    089H
  0088                34     TCON    DATA    088H
  00C3                35     MMU_SEL DATA    0C3H
  00D8                36     USR_TBE BIT     0D8H.0
  0086                37     CLKCON  DATA    086H
  00DB                38     CHIPSC  DATA    0DBH
  008F                39     CLKSEL  DATA    08FH
  00C0                40     DESCTL  DATA    0C0H
  00F0                41     B       DATA    0F0H
  00E2                42     RNGDAT  DATA    0E2H
  00E0                43     ACC     DATA    0E0H
  00A8                44     IE_DES  BIT     0A8H.0
  00E1                45     RNGCTL  DATA    0E1H
  008C                46     TH0     DATA    08CH
  00C0                47     DES_START       BIT     0C0H.0
  008A                48     TL0     DATA    08AH
  00A5                49     WDTCON  DATA    0A5H
  00F8                50     DESD0   DATA    0F8H
  00F9                51     DESD1   DATA    0F9H
  00FA                52     DESD2   DATA    0FAH
  00EB                53     FL_CON  DATA    0EBH
  00FB                54     DESD3   DATA    0FBH
  0080                55     SFR80   DATA    080H
  00FC                56     DESD4   DATA    0FCH
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE     2

  0090                57     SFR90   DATA    090H
  0081                58     SFR81   DATA    081H
  00FD                59     DESD5   DATA    0FDH
  0091                60     SFR91   DATA    091H
  0082                61     SFR82   DATA    082H
  00FE                62     DESD6   DATA    0FEH
  0092                63     SFR92   DATA    092H
  0083                64     SFR83   DATA    083H
  00FF                65     DESD7   DATA    0FFH
  0093                66     SFR93   DATA    093H
  0084                67     SFR84   DATA    084H
  0094                68     SFR94   DATA    094H
  0085                69     SFR85   DATA    085H
  0095                70     SFR95   DATA    095H
  0086                71     SFR86   DATA    086H
  0096                72     SFR96   DATA    096H
  0087                73     SFR87   DATA    087H
  0083                74     DPH     DATA    083H
  0097                75     SFR97   DATA    097H
  0088                76     SFR88   DATA    088H
  00A0                77     SFRA0   DATA    0A0H
  0098                78     SFR98   DATA    098H
  0089                79     SFR89   DATA    089H
  00E9                80     FL_STS_F_OP_ERR BIT     0E8H.1
  00AC                81     IE_FLASH        BIT     0A8H.4
  00AE                82     IE_WDT  BIT     0A8H.6
  00B0                83     SFRB0   DATA    0B0H
  00A1                84     SFRA1   DATA    0A1H
  0099                85     SFR99   DATA    099H
  00C0                86     SFRC0   DATA    0C0H
  00B1                87     SFRB1   DATA    0B1H
  00A2                88     SFRA2   DATA    0A2H
  008D                89     TCON_TF0        BIT     088H.5
  0082                90     DPL     DATA    082H
  00D0                91     SFRD0   DATA    0D0H
  00C1                92     SFRC1   DATA    0C1H
  00B2                93     SFRB2   DATA    0B2H
  00A3                94     SFRA3   DATA    0A3H
  00E0                95     SFRE0   DATA    0E0H
  00D1                96     SFRD1   DATA    0D1H
  00C2                97     SFRC2   DATA    0C2H
  00B3                98     SFRB3   DATA    0B3H
  00A4                99     SFRA4   DATA    0A4H
  00EF               100     BANK_SEL        DATA    0EFH
  00F0               101     SFRF0   DATA    0F0H
  00E1               102     SFRE1   DATA    0E1H
  00D2               103     SFRD2   DATA    0D2H
  00C3               104     SFRC3   DATA    0C3H
  00B4               105     SFRB4   DATA    0B4H
  00A5               106     SFRA5   DATA    0A5H
  00C1               107     DES_MODE        BIT     0C0H.1
  00F1               108     SFRF1   DATA    0F1H
  00E2               109     SFRE2   DATA    0E2H
  00D3               110     SFRD3   DATA    0D3H
  00C4               111     SFRC4   DATA    0C4H
  00B5               112     SFRB5   DATA    0B5H
  00A6               113     SFRA6   DATA    0A6H
  00E7               114     FL_PATCH        DATA    0E7H
  00F2               115     SFRF2   DATA    0F2H
  00E3               116     SFRE3   DATA    0E3H
  00D4               117     SFRD4   DATA    0D4H
  00C5               118     SFRC5   DATA    0C5H
  00B6               119     SFRB6   DATA    0B6H
  00A7               120     SFRA7   DATA    0A7H
  00F3               121     SFRF3   DATA    0F3H
  00E4               122     SFRE4   DATA    0E4H
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE     3

  00D5               123     SFRD5   DATA    0D5H
  00C6               124     SFRC6   DATA    0C6H
  00B7               125     SFRB7   DATA    0B7H
  00A8               126     SFRA8   DATA    0A8H
  008A               127     SFR8A   DATA    08AH
  00F4               128     SFRF4   DATA    0F4H
  00E5               129     SFRE5   DATA    0E5H
  00D6               130     SFRD6   DATA    0D6H
  00C7               131     SFRC7   DATA    0C7H
  00B8               132     SFRB8   DATA    0B8H
  00A9               133     SFRA9   DATA    0A9H
  009A               134     SFR9A   DATA    09AH
  008B               135     SFR8B   DATA    08BH
  00A2               136     DPS     DATA    0A2H
  00F5               137     SFRF5   DATA    0F5H
  00E6               138     SFRE6   DATA    0E6H
  00D7               139     SFRD7   DATA    0D7H
  00C8               140     SFRC8   DATA    0C8H
  00B9               141     SFRB9   DATA    0B9H
  009B               142     SFR9B   DATA    09BH
  008C               143     SFR8C   DATA    08CH
  00F6               144     SFRF6   DATA    0F6H
  00E7               145     SFRE7   DATA    0E7H
  00D8               146     SFRD8   DATA    0D8H
  00C9               147     SFRC9   DATA    0C9H
  009C               148     SFR9C   DATA    09CH
  008D               149     SFR8D   DATA    08DH
  00F7               150     SFRF7   DATA    0F7H
  00E8               151     SFRE8   DATA    0E8H
  00D9               152     SFRD9   DATA    0D9H
  009D               153     SFR9D   DATA    09DH
  008E               154     SFR8E   DATA    08EH
  00A6               155     WDTRST  DATA    0A6H
  00DF               156     UCR     DATA    0DFH
  00F8               157     SFRF8   DATA    0F8H
  00E9               158     SFRE9   DATA    0E9H
  009E               159     SFR9E   DATA    09EH
  008F               160     SFR8F   DATA    08FH
  00E3               161     FDCON   DATA    0E3H
  00F9               162     SFRF9   DATA    0F9H
  009F               163     SFR9F   DATA    09FH
  00C6               164     DES_KEY1EN      BIT     0C0H.6
  008C               165     TCON_TR0        BIT     088H.4
  00C7               166     DES_KEY2EN      BIT     0C0H.7
  00E8               167     FL_STS  DATA    0E8H
  00C2               168     DES_TDES        BIT     0C0H.2
  00EE               169     BANK_NUM        DATA    0EEH
  00AA               170     SFRAA   DATA    0AAH
  00BA               171     SFRBA   DATA    0BAH
  00AB               172     SFRAB   DATA    0ABH
  00CA               173     SFRCA   DATA    0CAH
  00BB               174     SFRBB   DATA    0BBH
  00AC               175     SFRAC   DATA    0ACH
  00DA               176     SFRDA   DATA    0DAH
  00CB               177     SFRCB   DATA    0CBH
  00BC               178     SFRBC   DATA    0BCH
  00AD               179     SFRAD   DATA    0ADH
  0080               180     rP0     DATA    080H
  00EA               181     SFREA   DATA    0EAH
  00DB               182     SFRDB   DATA    0DBH
  00CC               183     SFRCC   DATA    0CCH
  00BD               184     SFRBD   DATA    0BDH
  00AE               185     SFRAE   DATA    0AEH
  0090               186     rP1     DATA    090H
  00FA               187     SFRFA   DATA    0FAH
  00EB               188     SFREB   DATA    0EBH
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE     4

  00DC               189     SFRDC   DATA    0DCH
  00CD               190     SFRCD   DATA    0CDH
  00BE               191     SFRBE   DATA    0BEH
  00AF               192     SFRAF   DATA    0AFH
  00AF               193     IE_EA   BIT     0A8H.7
  00A0               194     rP2     DATA    0A0H
  00FB               195     SFRFB   DATA    0FBH
  00EC               196     SFREC   DATA    0ECH
  00DD               197     SFRDD   DATA    0DDH
  00CE               198     SFRCE   DATA    0CEH
  00BF               199     SFRBF   DATA    0BFH
  00B0               200     rP3     DATA    0B0H
  00FC               201     SFRFC   DATA    0FCH
  00ED               202     SFRED   DATA    0EDH
  00DE               203     SFRDE   DATA    0DEH
  00CF               204     SFRCF   DATA    0CFH
  00FD               205     SFRFD   DATA    0FDH
  00EE               206     SFREE   DATA    0EEH
  00DF               207     SFRDF   DATA    0DFH
  00FE               208     SFRFE   DATA    0FEH
  00EF               209     SFREF   DATA    0EFH
  00FF               210     SFRFF   DATA    0FFH
  00D8               211     USR     DATA    0D8H
  0097               212     SLEEP   DATA    097H
  00D0               213     PSW     DATA    0D0H
  00DB               214     VDCON   DATA    0DBH
                     215     ?PR?ISO7816_init?ISO7816_MAIN            SEGMENT CODE 
                     216     ?PR?ISO7816_case?ISO7816_MAIN            SEGMENT CODE 
                     217     ?PR?ISO7816_main?ISO7816_MAIN            SEGMENT CODE 
                     218     ?XD?ISO7816_main?ISO7816_MAIN            SEGMENT XDATA 
                     219     ?PR?Send_ATR?ISO7816_MAIN                SEGMENT CODE 
                     220     ?PR?RcvAPDU?ISO7816_MAIN                 SEGMENT CODE 
                     221     ?PR?_Command_Interpreter?ISO7816_MAIN    SEGMENT CODE 
                     222     ?XD?_Command_Interpreter?ISO7816_MAIN    SEGMENT XDATA 
                     223     ?PR?_GSM_Handler?ISO7816_MAIN            SEGMENT CODE 
                     224     ?XD?_GSM_Handler?ISO7816_MAIN            SEGMENT XDATA 
                     225     ?PR?_PPS_Handler?ISO7816_MAIN            SEGMENT CODE 
                     226     ?XD?_PPS_Handler?ISO7816_MAIN            SEGMENT XDATA 
                     227     ?PR?CMMD_Handle?ISO7816_MAIN             SEGMENT CODE 
                     228     ?PR?_TxStatus?ISO7816_MAIN               SEGMENT CODE 
                     229     ?XD?_TxStatus?ISO7816_MAIN               SEGMENT XDATA 
                     230     ?CO?ISO7816_MAIN     SEGMENT CONST 
*** ______________________________________________________^
*** ERROR #A24 IN 230 (.\Debug\Output\ISO7816_Main.src, LINE 230): SEGMENT TYPE EXPECTED
                     231     ?XD?ISO7816_MAIN     SEGMENT XDATA 
                     232             EXTRN   CODE (receive_byte)
                     233             EXTRN   CODE (Load_User_App)
                     234             EXTRN   CODE (Initialize_Operating_System)
                     235             EXTRN   XDATA (_os_config)
                     236             EXTRN   CODE (_send_byte)
                     237             EXTRN   CODE (Initialize_Hardware)
                     238             EXTRN   CODE (_IoInit)
                     239             EXTRN   CODE (_Yggdrasil_Decode)
                     240             EXTRN   CODE (StartTimeoutSequence)
                     241             EXTRN   CODE (gsm_class_case)
                     242             EXTRN   CODE (EndTimeoutSequence)
                     243             EXTRN   CODE (yggdrasil_class_case)
                     244             EXTRN   CODE (_ioman_transmit)
                     245             EXTRN   XDATA (?_ioman_transmit?BYTE)
                     246             EXTRN   CODE (_ISO_AutoTxNULL)
                     247             EXTRN   XDATA (response_length)
                     248             EXTRN   CODE (_Set_PPS)
                     249             EXTRN   CODE (Sleep_Mode)
                     250             EXTRN   CODE (_Rx_n_Bytes)
                     251             EXTRN   CODE (_Tx_n_Bytes)
                     252             EXTRN   CODE (PPS)
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE     5

                     253             EXTRN   CODE (Save_State)
                     254             EXTRN   CODE (?C?CCASE)
                     255             PUBLIC  PPSFlag
                     256             PUBLIC  Foffset
                     257             PUBLIC  FlashBuffer
                     258             PUBLIC  _iso7816_ins
                     259             PUBLIC  _iso7816_cla
                     260             PUBLIC  _iso7816_state
                     261             PUBLIC  SWptr
                     262             PUBLIC  iso7816_buffer
                     263             PUBLIC  SW
                     264             PUBLIC  ATR
                     265             PUBLIC  _TxStatus
                     266             PUBLIC  CMMD_Handle
                     267             PUBLIC  _PPS_Handler
                     268             PUBLIC  _GSM_Handler
                     269             PUBLIC  _Command_Interpreter
                     270             PUBLIC  RcvAPDU
                     271             PUBLIC  Send_ATR
                     272             PUBLIC  ISO7816_main
                     273             PUBLIC  ISO7816_case
                     274             PUBLIC  ISO7816_init
                     275     
----                 276             RSEG  ?XD?_Command_Interpreter?ISO7816_MAIN
0000                 277     ?_Command_Interpreter?BYTE:
0000                 278          buffer?541:   DS   2
                     279     
----                 280             RSEG  ?XD?_TxStatus?ISO7816_MAIN
0000                 281     ?_TxStatus?BYTE:
0000                 282             ptr?944:   DS   1
                     283     
----                 284             RSEG  ?XD?ISO7816_main?ISO7816_MAIN
0000                 285     ?ISO7816_main?BYTE:
0000                 286              sw?240:   DS   2
                     287     
----                 288             RSEG  ?XD?_GSM_Handler?ISO7816_MAIN
0000                 289     ?_GSM_Handler?BYTE:
0000                 290          buffer?642:   DS   2
                     291     
----                 292             RSEG  ?XD?_PPS_Handler?ISO7816_MAIN
0000                 293     ?_PPS_Handler?BYTE:
0000                 294          buffer?743:   DS   2
                     295     
----                 296             RSEG  ?XD?ISO7816_MAIN
0000                 297      iso7816_buffer:   DS   262
0106                 298               SWptr:   DS   1
0107                 299      _iso7816_state:   DS   1
0108                 300        _iso7816_cla:   DS   1
0109                 301        _iso7816_ins:   DS   1
010A                 302         FlashBuffer:   DS   512
030A                 303             Foffset:   DS   2
030C                 304             PPSFlag:   DS   1
                     305     
----                 306             RSEG  ?CO?ISO7816_MAIN
*** _______________________________________^
*** ERROR #A30 IN 306 (.\Debug\Output\ISO7816_Main.src, LINE 306): SEGMENT SYMBOL EXPECTED
030D                 307     ATR:
                     308             DB      03BH
*** _________________________________^
*** ERROR #A37 IN 308 (.\Debug\Output\ISO7816_Main.src, LINE 308): OPERATION INVALID IN THIS SEGMENT
                     309             DB      01AH
*** _________________________________^
*** ERROR #A37 IN 309 (.\Debug\Output\ISO7816_Main.src, LINE 309): OPERATION INVALID IN THIS SEGMENT
                     310             DB      096H
*** _________________________________^
*** ERROR #A37 IN 310 (.\Debug\Output\ISO7816_Main.src, LINE 310): OPERATION INVALID IN THIS SEGMENT
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE     6

                     311             DB      000H
*** _________________________________^
*** ERROR #A37 IN 311 (.\Debug\Output\ISO7816_Main.src, LINE 311): OPERATION INVALID IN THIS SEGMENT
                     312             DB      017H
*** _________________________________^
*** ERROR #A37 IN 312 (.\Debug\Output\ISO7816_Main.src, LINE 312): OPERATION INVALID IN THIS SEGMENT
                     313             DB      0BDH
*** _________________________________^
*** ERROR #A37 IN 313 (.\Debug\Output\ISO7816_Main.src, LINE 313): OPERATION INVALID IN THIS SEGMENT
                     314             DB      010H
*** _________________________________^
*** ERROR #A37 IN 314 (.\Debug\Output\ISO7816_Main.src, LINE 314): OPERATION INVALID IN THIS SEGMENT
                     315             DB      059H
*** _________________________________^
*** ERROR #A37 IN 315 (.\Debug\Output\ISO7816_Main.src, LINE 315): OPERATION INVALID IN THIS SEGMENT
                     316             DB      043H
*** _________________________________^
*** ERROR #A37 IN 316 (.\Debug\Output\ISO7816_Main.src, LINE 316): OPERATION INVALID IN THIS SEGMENT
                     317             DB      04FH
*** _________________________________^
*** ERROR #A37 IN 317 (.\Debug\Output\ISO7816_Main.src, LINE 317): OPERATION INVALID IN THIS SEGMENT
                     318             DB      053H
*** _________________________________^
*** ERROR #A37 IN 318 (.\Debug\Output\ISO7816_Main.src, LINE 318): OPERATION INVALID IN THIS SEGMENT
                     319             DB      002H
*** _________________________________^
*** ERROR #A37 IN 319 (.\Debug\Output\ISO7816_Main.src, LINE 319): OPERATION INVALID IN THIS SEGMENT
                     320             DB      000H
*** _________________________________^
*** ERROR #A37 IN 320 (.\Debug\Output\ISO7816_Main.src, LINE 320): OPERATION INVALID IN THIS SEGMENT
                     321     
030D                 322     SW:
                     323             DB      090H
*** _________________________________^
*** ERROR #A37 IN 323 (.\Debug\Output\ISO7816_Main.src, LINE 323): OPERATION INVALID IN THIS SEGMENT
                     324             DB      000H
*** _________________________________^
*** ERROR #A37 IN 324 (.\Debug\Output\ISO7816_Main.src, LINE 324): OPERATION INVALID IN THIS SEGMENT
                     325             DB      06DH
*** _________________________________^
*** ERROR #A37 IN 325 (.\Debug\Output\ISO7816_Main.src, LINE 325): OPERATION INVALID IN THIS SEGMENT
                     326             DB      000H
*** _________________________________^
*** ERROR #A37 IN 326 (.\Debug\Output\ISO7816_Main.src, LINE 326): OPERATION INVALID IN THIS SEGMENT
                     327             DB      06CH
*** _________________________________^
*** ERROR #A37 IN 327 (.\Debug\Output\ISO7816_Main.src, LINE 327): OPERATION INVALID IN THIS SEGMENT
                     328             DB      000H
*** _________________________________^
*** ERROR #A37 IN 328 (.\Debug\Output\ISO7816_Main.src, LINE 328): OPERATION INVALID IN THIS SEGMENT
                     329             DB      065H
*** _________________________________^
*** ERROR #A37 IN 329 (.\Debug\Output\ISO7816_Main.src, LINE 329): OPERATION INVALID IN THIS SEGMENT
                     330             DB      001H
*** _________________________________^
*** ERROR #A37 IN 330 (.\Debug\Output\ISO7816_Main.src, LINE 330): OPERATION INVALID IN THIS SEGMENT
                     331             DB      06AH
*** _________________________________^
*** ERROR #A37 IN 331 (.\Debug\Output\ISO7816_Main.src, LINE 331): OPERATION INVALID IN THIS SEGMENT
                     332             DB      000H
*** _________________________________^
*** ERROR #A37 IN 332 (.\Debug\Output\ISO7816_Main.src, LINE 332): OPERATION INVALID IN THIS SEGMENT
                     333             DB      065H
*** _________________________________^
*** ERROR #A37 IN 333 (.\Debug\Output\ISO7816_Main.src, LINE 333): OPERATION INVALID IN THIS SEGMENT
                     334             DB      004H
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE     7

*** _________________________________^
*** ERROR #A37 IN 334 (.\Debug\Output\ISO7816_Main.src, LINE 334): OPERATION INVALID IN THIS SEGMENT
                     335     
                     336     
----                 337             RSEG ?CO?ISO7816_MAIN
*** ______________________________________^
*** ERROR #A30 IN 337 (.\Debug\Output\ISO7816_Main.src, LINE 337): SEGMENT SYMBOL EXPECTED
                     338     ; 
                     339     ; #include      "_17BD_UserCode.h"
                     340     ; #include      "defs.h"        
                     341     ; #include      "..\yggdrasil\yggdrasil.h"
                     342     ; #include      "..\drivers\ioman.h"
                     343     ; #include      "..\ISO7816\ISO7816.h"
                     344     ; #include      "..\NORFlash\NORFlash.h"
                     345     ; 
                     346     ; BYTE  SWptr;
                     347     ; HALFWX        Foffset;
                     348     ; BYTEX PPSFlag;
                     349     ; //BYTEX       gCommand[5];
                     350     ; //BYTEX       IOBuf[512];
                     351     ; //BYTEX       FlashBuffer[512];
                     352     ; uchar _iso7816_ins;
                     353     ; uchar _iso7816_cla;
                     354     ; BYTEX _iso7816_state;
                     355     ; BYTEX         iso7816_buffer[262];
                     356     ; BYTEX IOBuf[512];
                     357     ; //BYTEX       IOBuf[] = (iso7816_buffer+5);
                     358     ; 
                     359     ; //BYTEC       ATR[]={0x3B,0x18,0x96,0x00,0x17,0xBD,0x10,0x00,0x00,0x90,0x00};
                     360     ; BYTEC ATR[]={0x3B,0x1A,0x96,0x00,0x17,0xBD,0x10,0x59,0x43,0x4F,0x53,0x02,0x00};
                     361     ; BYTEC SW[12]={0x90,0x00,0x6D,0x00,0x6C,0x00,0x65,0x01,0x6A,0x00,0x65,0x04};
                     362     ; //                               Success, Invalid INS, P3 err, Write err, P1P2 err, Verif
                             y err
                     363     ; 
                     364     ; void ISO7816_init(void) {
                     365     
----                 366             RSEG  ?PR?ISO7816_init?ISO7816_MAIN
0000                 367     ISO7816_init:
                     368             USING   0
                     369                             ; SOURCE LINE # 27
                     370     ;       IE_EA = 1;                              //global interrupt enable bit
                     371                             ; SOURCE LINE # 28
0000 D2AF            372             SETB    IE_EA
                     373     ;       IE_UART = 1;                    //enable uart interrupt
                     374                             ; SOURCE LINE # 29
0002 D2AA            375             SETB    IE_UART
                     376     ;       CLKSEL = 0x80;                  //30Mhz internal clock
                     377                             ; SOURCE LINE # 30
0004 758F80          378             MOV     CLKSEL,#080H
                     379     ;       //rP1=0;
                     380     ;       //MMU_SEL = 0;
                     381     ;       Initialize_Hardware();
                     382                             ; SOURCE LINE # 33
0007 120000   F      383             LCALL   Initialize_Hardware
                     384     ;       _iso7816_state = ISO7816_DORMANT;
                     385                             ; SOURCE LINE # 34
000A 900000   F      386             MOV     DPTR,#_iso7816_state
000D E4              387             CLR     A
000E F0              388             MOVX    @DPTR,A
                     389     ; }  
                     390                             ; SOURCE LINE # 35
000F                 391     ?C0001:
000F 22              392             RET     
                     393     ; END OF ISO7816_init
                     394     
                     395     ; 
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE     8

                     396     ; 
                     397     ; uchar ISO7816_case(void) {
                     398     
----                 399             RSEG  ?PR?ISO7816_case?ISO7816_MAIN
0000                 400     ISO7816_case:
                     401             USING   0
                     402                             ; SOURCE LINE # 38
                     403     ;       switch(_iso7816_cla) {
                     404                             ; SOURCE LINE # 39
0000 900000   F      405             MOV     DPTR,#_iso7816_cla
0003 E0              406             MOVX    A,@DPTR
0004 FF              407             MOV     R7,A
0005 EF              408             MOV     A,R7
0006 120000   F      409             LCALL   ?C?CCASE
0009 0000     F      410             DW      ?C0003
000B A0              411             DB      0A0H
000C 0000     F      412             DW      ?C0005
000E A6              413             DB      0A6H
000F 0000            414             DW      00H
0011 0000     F      415             DW      ?C0006
                     416     ;               case CLA_GSM11:
                     417                             ; SOURCE LINE # 40
0013                 418     ?C0003:
                     419     ;                       return gsm_class_case[_iso7816_ins];
                     420                             ; SOURCE LINE # 41
0013 900000   F      421             MOV     DPTR,#_iso7816_ins
0016 E0              422             MOVX    A,@DPTR
0017 FF              423             MOV     R7,A
0018 EF              424             MOV     A,R7
0019 900000   F      425             MOV     DPTR,#gsm_class_case
001C 93              426             MOVC    A,@A+DPTR
001D FF              427             MOV     R7,A
001E 22              428             RET     
                     429     ;               case CLA_YGGDRASIL:
                     430                             ; SOURCE LINE # 42
001F                 431     ?C0005:
                     432     ;                       return yggdrasil_class_case[_iso7816_ins];
                     433                             ; SOURCE LINE # 43
001F 900000   F      434             MOV     DPTR,#_iso7816_ins
0022 E0              435             MOVX    A,@DPTR
0023 FF              436             MOV     R7,A
0024 EF              437             MOV     A,R7
0025 900000   F      438             MOV     DPTR,#yggdrasil_class_case
0028 93              439             MOVC    A,@A+DPTR
0029 FF              440             MOV     R7,A
002A 22              441             RET     
                     442     ;               default:
                     443                             ; SOURCE LINE # 44
002B                 444     ?C0006:
                     445     ;                       return 0;                       
                     446                             ; SOURCE LINE # 45
002B 7F00            447             MOV     R7,#00H
002D 22              448             RET     
                     449     ;       }
                     450                             ; SOURCE LINE # 46
002E                 451     ?C0002:
                     452     ;       return 0;
                     453                             ; SOURCE LINE # 47
002E 7F00            454             MOV     R7,#00H
                     455     ; }
                     456                             ; SOURCE LINE # 48
0030                 457     ?C0004:
0030 22              458             RET     
                     459     ; END OF ISO7816_case
                     460     
                     461     ; //====================================================
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE     9

                     462     ; //    Main process
                     463     ; void ISO7816_main(void)
                     464     
----                 465             RSEG  ?PR?ISO7816_main?ISO7816_MAIN
0000                 466     ISO7816_main:
                     467             USING   0
                     468                             ; SOURCE LINE # 51
                     469     ; {
                     470                             ; SOURCE LINE # 52
                     471     ;       //register uint16 i=0;
                     472     ;       //register uint16 len;
                     473     ;       uint16 sw;
                     474     ;       switch(_iso7816_state) {
                     475                             ; SOURCE LINE # 56
0000 900000   F      476             MOV     DPTR,#_iso7816_state
0003 E0              477             MOVX    A,@DPTR
0004 FF              478             MOV     R7,A
0005 EF              479             MOV     A,R7
0006 120000   F      480             LCALL   ?C?CCASE
0009 0000     F      481             DW      ?C0008
000B 00              482             DB      00H
000C 0000     F      483             DW      ?C0020
000E 01              484             DB      01H
000F 0000     F      485             DW      ?C0011
0011 02              486             DB      02H
0012 0000     F      487             DW      ?C0020
0014 03              488             DB      03H
0015 0000     F      489             DW      ?C0013
0017 04              490             DB      04H
0018 0000     F      491             DW      ?C0020
001A 07              492             DB      07H
001B 0000     F      493             DW      ?C0019
001D 0D              494             DB      0DH
001E 0000            495             DW      00H
0020 0000     F      496             DW      ?C0020
                     497     ;               case ISO7816_DORMANT:
                     498                             ; SOURCE LINE # 57
0022                 499     ?C0008:
                     500     ;                       IoInit(0x11);                                           //      H/W
                              initial
                     501                             ; SOURCE LINE # 58
0022 7F11            502             MOV     R7,#011H
0024 120000   F      503             LCALL   _IoInit
                     504     ;                       Initialize_Hardware();
                     505                             ; SOURCE LINE # 59
0027 120000   F      506             LCALL   Initialize_Hardware
                     507     ;                       Send_ATR();                                                     // 
                                  Send ATR  
                     508                             ; SOURCE LINE # 60
002A 120000   F      509             LCALL   Send_ATR
                     510     ;                       Initialize_Operating_System();
                     511                             ; SOURCE LINE # 61
002D 120000   F      512             LCALL   Initialize_Operating_System
                     513     ;                       _iso7816_state = ISO7816_RECEIVE_CMD;
                     514                             ; SOURCE LINE # 62
0030 900000   F      515             MOV     DPTR,#_iso7816_state
0033 7403            516             MOV     A,#03H
0035 F0              517             MOVX    @DPTR,A
                     518     ;                       Sleep_Mode();
                     519                             ; SOURCE LINE # 63
0036 120000   F      520             LCALL   Sleep_Mode
                     521     ;                       break;
                     522                             ; SOURCE LINE # 64
0039 22              523             RET     
                     524     ;               case ISO7816_READY:             
                     525                             ; SOURCE LINE # 65
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    10

003A                 526     ?C0009:
                     527     ;                       //Sleep_Mode();                 //      Power down mode after threa
                             d has been executed
                     528     ;                       /*_iso7816_cla = iso7816_buffer[0] = receive_byte();            //C
                             LA
                     529     ;                       _iso7816_ins = iso7816_buffer[1] = receive_byte();              //I
                             NS
                     530     ;                       iso7816_buffer[2] = receive_byte();             //P1
                     531     ;                       iso7816_buffer[3] = receive_byte();             //P2
                     532     ;                       iso7816_buffer[4] = receive_byte();             //P3
                     533     ;                       len = (5 + iso7816_buffer[4]);
                     534     ;                       
                     535     ;                       if(len > 5) {
                     536     ;                               //if(iso7816_buffer[1] == 0xA4) {
                     537     ;                               send_byte(iso7816_buffer[1]);
                     538     ;                               //send_byte(0);
                     539     ;                               for(i=5;i<len;i++) {
                     540     ;                                       iso7816_buffer[i] = receive_byte();
                     541     ;                               } 
                     542     ;                               //}
                     543     ;                       }
                     544     ;                       //iso7816_buffer[5] = receive_byte();
                     545     ;                       //iso7816_buffer[6] = receive_byte();
                     546     ;                       _iso7816_state = ISO7816_RUNNING;  */
                     547     ;                       break;
                     548                             ; SOURCE LINE # 86
003A 22              549             RET     
                     550     ;               case ISO7816_RECEIVE_CMD:
                     551                             ; SOURCE LINE # 87
003B                 552     ?C0010:
                     553     ;                       /*if(_os_config.os_state & YGG_ST_LOAD_APP) {      //load app into 
                             user program space
                     554     ;                               //Sleep_Mode(); 
                     555     ;                               Load_User_App();
                     556     ;                               _os_config.os_state &= ~(YGG_ST_LOAD_APP);
                     557     ;                               Save_State();
                     558     ;                       }
                     559     ;                       if(_os_config.os_state & YGG_ST_SLEEP) {                   //sleep 
                             MCU
                     560     ;                               Sleep_Mode();
                     561     ;                               _os_config.os_state &= ~(YGG_ST_SLEEP);
                     562     ;                       } */
                     563     ;                       //do nothing
                     564     ;                       break;
                     565                             ; SOURCE LINE # 99
003B 22              566             RET     
                     567     ;               case ISO7816_SEND_ACK:
                     568                             ; SOURCE LINE # 100
003C                 569     ?C0011:
                     570     ;                       send_byte(iso7816_buffer[1]);                   //send acknowledgem
                             ent in order to and wait for data
                     571                             ; SOURCE LINE # 101
003C 900000   F      572             MOV     DPTR,#iso7816_buffer+01H
003F E0              573             MOVX    A,@DPTR
0040 FF              574             MOV     R7,A
0041 120000   F      575             LCALL   _send_byte
                     576     ;                       _iso7816_state = YGG_RECEIVE_DATA;
                     577                             ; SOURCE LINE # 102
0044 900000   F      578             MOV     DPTR,#_iso7816_state
0047 7407            579             MOV     A,#07H
0049 F0              580             MOVX    @DPTR,A
                     581     ;                       break;
                     582                             ; SOURCE LINE # 103
004A 22              583             RET     
                     584     ;               case ISO7816_RECEIVE_DATA:
                     585                             ; SOURCE LINE # 104
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    11

004B                 586     ?C0012:
                     587     ;                       //do nothing
                     588     ;                       break;
                     589                             ; SOURCE LINE # 106
004B 22              590             RET     
                     591     ;               case ISO7816_RUNNING:
                     592                             ; SOURCE LINE # 107
004C                 593     ?C0013:
                     594     ;                       switch(iso7816_buffer[0]) {
                     595                             ; SOURCE LINE # 108
004C 900000   F      596             MOV     DPTR,#iso7816_buffer
004F E0              597             MOVX    A,@DPTR
0050 FF              598             MOV     R7,A
0051 EF              599             MOV     A,R7
0052 120000   F      600             LCALL   ?C?CCASE
0055 0000     F      601             DW      ?C0015
0057 FF              602             DB      0FFH
0058 0000            603             DW      00H
005A 0000     F      604             DW      ?C0016
                     605     ;                               case 0xff:                                                 
                                  //default iso7816 system class
                     606                             ; SOURCE LINE # 109
005C                 607     ?C0015:
                     608     ;                                       PPS_Handler(iso7816_buffer);
                     609                             ; SOURCE LINE # 110
005C 7E00     F      610             MOV     R6,#HIGH (iso7816_buffer)
005E 7F00     F      611             MOV     R7,#LOW (iso7816_buffer)
0060 120000   F      612             LCALL   _PPS_Handler
                     613     ;                                       break;
                     614                             ; SOURCE LINE # 111
0063 020000   F      615             LJMP    ?C0014
                     616     ;                               default:
                     617                             ; SOURCE LINE # 112
0066                 618     ?C0016:
                     619     ;                                       TX_NULL_BYTE_ON(8000)
                     620                             ; SOURCE LINE # 113
0066 7D3F            621             MOV     R5,#03FH
0068 7C1F            622             MOV     R4,#01FH
006A 7F01            623             MOV     R7,#01H
006C 120000   F      624             LCALL   _ISO_AutoTxNULL
                     625     ;                                       StartTimeoutSequence();
                     626                             ; SOURCE LINE # 114
006F 120000   F      627             LCALL   StartTimeoutSequence
                     628     ;                                       _iso7816_cla = iso7816_buffer[0];
                     629                             ; SOURCE LINE # 115
0072 900000   F      630             MOV     DPTR,#iso7816_buffer
0075 E0              631             MOVX    A,@DPTR
0076 FF              632             MOV     R7,A
0077 900000   F      633             MOV     DPTR,#_iso7816_cla
007A EF              634             MOV     A,R7
007B F0              635             MOVX    @DPTR,A
                     636     ;                                       _iso7816_ins = iso7816_buffer[1];
                     637                             ; SOURCE LINE # 116
007C 900000   F      638             MOV     DPTR,#iso7816_buffer+01H
007F E0              639             MOVX    A,@DPTR
0080 FF              640             MOV     R7,A
0081 900000   F      641             MOV     DPTR,#_iso7816_ins
0084 EF              642             MOV     A,R7
0085 F0              643             MOVX    @DPTR,A
                     644     ;                                       sw = Yggdrasil_Decode((apdu_command *)iso7816_buffe
                             r);
                     645                             ; SOURCE LINE # 117
0086 7B01            646             MOV     R3,#01H
0088 7A00     F      647             MOV     R2,#HIGH (iso7816_buffer)
008A 7900     F      648             MOV     R1,#LOW (iso7816_buffer)
008C 120000   F      649             LCALL   _Yggdrasil_Decode
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    12

008F 900000   F      650             MOV     DPTR,#sw?240
0092 EE              651             MOV     A,R6
0093 F0              652             MOVX    @DPTR,A
0094 A3              653             INC     DPTR
0095 EF              654             MOV     A,R7
0096 F0              655             MOVX    @DPTR,A
                     656     ;                                       
                     657     ;                                       if(_os_config.os_state & YGG_ST_LOAD_APP) {
                     658                             ; SOURCE LINE # 119
0097 900000   F      659             MOV     DPTR,#_os_config+01H
009A E0              660             MOVX    A,@DPTR
009B FF              661             MOV     R7,A
009C EF              662             MOV     A,R7
009D 30E31C          663             JNB     ACC.3,?C0017
                     664     ;                                               if(Load_User_App() == APDU_SUCCESS) {
                     665                             ; SOURCE LINE # 120
00A0 120000   F      666             LCALL   Load_User_App
00A3 EF              667             MOV     A,R7
00A4 B40015          668             CJNE    A,#00H,?C0017
00A7 EE              669             MOV     A,R6
00A8 B49011          670             CJNE    A,#090H,?C0017
                     671     ;                                                       _os_config.os_state     &= ~YGG_ST_
                             LOAD_APP;
                     672                             ; SOURCE LINE # 121
00AB 900000   F      673             MOV     DPTR,#_os_config+01H
00AE E0              674             MOVX    A,@DPTR
00AF FF              675             MOV     R7,A
00B0 EF              676             MOV     A,R7
00B1 54F7            677             ANL     A,#0F7H
00B3 FF              678             MOV     R7,A
00B4 900000   F      679             MOV     DPTR,#_os_config+01H
00B7 EF              680             MOV     A,R7
00B8 F0              681             MOVX    @DPTR,A
                     682     ;                                                       Save_State();
                     683                             ; SOURCE LINE # 122
00B9 120000   F      684             LCALL   Save_State
                     685     ;                                               }
                     686                             ; SOURCE LINE # 123
00BC                 687     ?C0018:
                     688     ;                                       }
                     689                             ; SOURCE LINE # 124
00BC                 690     ?C0017:
                     691     ;                                       EndTimeoutSequence();
                     692                             ; SOURCE LINE # 125
00BC 120000   F      693             LCALL   EndTimeoutSequence
                     694     ;                                       TX_NULL_BYTE_OFF(8000)
                     695                             ; SOURCE LINE # 126
00BF 7D3F            696             MOV     R5,#03FH
00C1 7C1F            697             MOV     R4,#01FH
00C3 7F00            698             MOV     R7,#00H
00C5 120000   F      699             LCALL   _ISO_AutoTxNULL
                     700     ;                                       ioman_transmit(response_length, _iso7816_ins, iso78
                             16_buffer, sw);
                     701                             ; SOURCE LINE # 127
00C8 900000   F      702             MOV     DPTR,#response_length
00CB E0              703             MOVX    A,@DPTR
00CC FF              704             MOV     R7,A
00CD C007            705             PUSH    AR7
00CF 900000   F      706             MOV     DPTR,#_iso7816_ins
00D2 E0              707             MOVX    A,@DPTR
00D3 FD              708             MOV     R5,A
00D4 7B01            709             MOV     R3,#01H
00D6 7A00     F      710             MOV     R2,#HIGH (iso7816_buffer)
00D8 7900     F      711             MOV     R1,#LOW (iso7816_buffer)
00DA 900000   F      712             MOV     DPTR,#sw?240
00DD E0              713             MOVX    A,@DPTR
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    13

00DE FE              714             MOV     R6,A
00DF A3              715             INC     DPTR
00E0 E0              716             MOVX    A,@DPTR
00E1 FF              717             MOV     R7,A
00E2 900000   F      718             MOV     DPTR,#?_ioman_transmit?BYTE+05H
00E5 EE              719             MOV     A,R6
00E6 F0              720             MOVX    @DPTR,A
00E7 A3              721             INC     DPTR
00E8 EF              722             MOV     A,R7
00E9 F0              723             MOVX    @DPTR,A
00EA D007            724             POP     AR7
00EC 120000   F      725             LCALL   _ioman_transmit
                     726     ;                                       //Response();
                     727     ;                                       //TxStatus(SWptr);                                 
                                  //      Tx SW
                     728     ;                                       break;
                     729                             ; SOURCE LINE # 130
                     730     ;                       }
                     731                             ; SOURCE LINE # 131
00EF                 732     ?C0014:
                     733     ;                       _iso7816_state = ISO7816_RECEIVE_CMD;
                     734                             ; SOURCE LINE # 132
00EF 900000   F      735             MOV     DPTR,#_iso7816_state
00F2 7403            736             MOV     A,#03H
00F4 F0              737             MOVX    @DPTR,A
                     738     ;                       Sleep_Mode();
                     739                             ; SOURCE LINE # 133
00F5 120000   F      740             LCALL   Sleep_Mode
                     741     ;                       break;
                     742                             ; SOURCE LINE # 134
00F8 22              743             RET     
                     744     ;               case ISO7816_STOP:
                     745                             ; SOURCE LINE # 135
00F9                 746     ?C0019:
                     747     ;                       EndTimeoutSequence();
                     748                             ; SOURCE LINE # 136
00F9 120000   F      749             LCALL   EndTimeoutSequence
                     750     ;                       TX_NULL_BYTE_OFF(8000)
                     751                             ; SOURCE LINE # 137
00FC 7D3F            752             MOV     R5,#03FH
00FE 7C1F            753             MOV     R4,#01FH
0100 7F00            754             MOV     R7,#00H
0102 120000   F      755             LCALL   _ISO_AutoTxNULL
                     756     ;                       ioman_transmit(0, _iso7816_ins, iso7816_buffer, APDU_FATAL_ERROR);
                     757                             ; SOURCE LINE # 138
0105 900000   F      758             MOV     DPTR,#_iso7816_ins
0108 E0              759             MOVX    A,@DPTR
0109 FD              760             MOV     R5,A
010A 7B01            761             MOV     R3,#01H
010C 7A00     F      762             MOV     R2,#HIGH (iso7816_buffer)
010E 7900     F      763             MOV     R1,#LOW (iso7816_buffer)
0110 900000   F      764             MOV     DPTR,#?_ioman_transmit?BYTE+05H
0113 746F            765             MOV     A,#06FH
0115 F0              766             MOVX    @DPTR,A
0116 A3              767             INC     DPTR
0117 E4              768             CLR     A
0118 F0              769             MOVX    @DPTR,A
0119 7F00            770             MOV     R7,#00H
011B 120000   F      771             LCALL   _ioman_transmit
                     772     ;                       _iso7816_state = ISO7816_RECEIVE_CMD;
                     773                             ; SOURCE LINE # 139
011E 900000   F      774             MOV     DPTR,#_iso7816_state
0121 7403            775             MOV     A,#03H
0123 F0              776             MOVX    @DPTR,A
                     777     ;                       Initialize_Operating_System();
                     778                             ; SOURCE LINE # 140
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    14

0124 120000   F      779             LCALL   Initialize_Operating_System
                     780     ;                       break;
                     781                             ; SOURCE LINE # 141
                     782     ;       }
                     783                             ; SOURCE LINE # 142
0127                 784     ?C0007:
                     785     ;       /*if(ISO7816_Time == 0)
                     786     ;       {
                     787     ;               IoInit(0x11);                                           //      H/W initial
                     788     ;               Send_ATR();                                                     //      Sen
                             d ATR
                     789     ;               PPSFlag = 0;                                            //      Enable PPS
                     790     ;               ISO7816_Time ++;
                     791     ;               return;                                                         //      Ret
                             urn to the main process after sending ATR    
                     792     ;       }
                     793     ;       if(RcvAPDU())                                                   //      Rcv APDU,in
                             clude PPS
                     794     ;       {       
                     795     ;               Foffset = (P1 << 8) + P2;                       //      Start address of fl
                             ash reading/writing
                     796     ;               SWptr = SUCCESS;                                        //      9000
                     797     ; 
                     798     ;               TX_NULL_BYTE_ON(8000)
                     799     ;               CMMD_Handle();
                     800     ;               TX_NULL_BYTE_OFF(8000)
                     801     ;               
                     802     ;               Response();
                     803     ;               TxStatus(SWptr);                                        //      Tx SW
                     804     ;       } */
                     805     ; }
                     806                             ; SOURCE LINE # 163
0127                 807     ?C0020:
0127 22              808             RET     
                     809     ; END OF ISO7816_main
                     810     
                     811     ; 
                     812     ; //====================================================
                     813     ; //    ISO/IEC 7816 commands handling
                     814     ; void  Send_ATR(void)
                     815     
----                 816             RSEG  ?PR?Send_ATR?ISO7816_MAIN
0000                 817     Send_ATR:
                     818             USING   0
                     819                             ; SOURCE LINE # 167
                     820     ; {     
                     821                             ; SOURCE LINE # 168
                     822     ;       Tx_n_Bytes(sizeof(ATR),ATR);
                     823                             ; SOURCE LINE # 169
0000 7BFF            824             MOV     R3,#0FFH
0002 7A00     F      825             MOV     R2,#HIGH (ATR)
0004 7900     F      826             MOV     R1,#LOW (ATR)
0006 7F0D            827             MOV     R7,#0DH
0008 7E00            828             MOV     R6,#00H
000A 120000   F      829             LCALL   _Tx_n_Bytes
                     830     ; }
                     831                             ; SOURCE LINE # 170
000D                 832     ?C0021:
000D 22              833             RET     
                     834     ; END OF Send_ATR
                     835     
                     836     ; 
                     837     ; //====================================================
                     838     ; //    Receive APDU
                     839     ; BYTE  RcvAPDU(void)
                     840     
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    15

----                 841             RSEG  ?PR?RcvAPDU?ISO7816_MAIN
0000                 842     RcvAPDU:
                     843             USING   0
                     844                             ; SOURCE LINE # 174
                     845     ; {
                     846                             ; SOURCE LINE # 175
                     847     ;       iso7816_buffer[0] = receive_byte();
                     848                             ; SOURCE LINE # 176
0000 120000   F      849             LCALL   receive_byte
0003 900000   F      850             MOV     DPTR,#iso7816_buffer
0006 EF              851             MOV     A,R7
0007 F0              852             MOVX    @DPTR,A
                     853     ;       if(iso7816_buffer[0] == 0xFF)
                     854                             ; SOURCE LINE # 177
0008 900000   F      855             MOV     DPTR,#iso7816_buffer
000B E0              856             MOVX    A,@DPTR
000C FF              857             MOV     R7,A
000D EF              858             MOV     A,R7
000E 64FF            859             XRL     A,#0FFH
0010 703B            860             JNZ     ?C0022
                     861     ;       {       
                     862                             ; SOURCE LINE # 178
                     863     ;               iso7816_buffer[1] = receive_byte();
                     864                             ; SOURCE LINE # 179
0012 120000   F      865             LCALL   receive_byte
0015 900000   F      866             MOV     DPTR,#iso7816_buffer+01H
0018 EF              867             MOV     A,R7
0019 F0              868             MOVX    @DPTR,A
                     869     ;               iso7816_buffer[2] = receive_byte();
                     870                             ; SOURCE LINE # 180
001A 120000   F      871             LCALL   receive_byte
001D 900000   F      872             MOV     DPTR,#iso7816_buffer+02H
0020 EF              873             MOV     A,R7
0021 F0              874             MOVX    @DPTR,A
                     875     ;               iso7816_buffer[3] = receive_byte();
                     876                             ; SOURCE LINE # 181
0022 120000   F      877             LCALL   receive_byte
0025 900000   F      878             MOV     DPTR,#iso7816_buffer+03H
0028 EF              879             MOV     A,R7
0029 F0              880             MOVX    @DPTR,A
                     881     ;               if(iso7816_buffer[1] == 0x10 && PPSFlag == 0)           //      PPS
                     882                             ; SOURCE LINE # 182
002A 900000   F      883             MOV     DPTR,#iso7816_buffer+01H
002D E0              884             MOVX    A,@DPTR
002E FF              885             MOV     R7,A
002F EF              886             MOV     A,R7
0030 6410            887             XRL     A,#010H
0032 6003            888             JZ      $ + 5H
0034 020000   F      889             LJMP    ?C0024
0037 900000   F      890             MOV     DPTR,#PPSFlag
003A E0              891             MOVX    A,@DPTR
003B FF              892             MOV     R7,A
003C EF              893             MOV     A,R7
003D 6003            894             JZ      $ + 5H
003F 020000   F      895             LJMP    ?C0024
                     896     ;               {       
                     897                             ; SOURCE LINE # 183
                     898     ;                       PPS();                                                  //      Set
                              baud rate
                     899                             ; SOURCE LINE # 184
0042 120000   F      900             LCALL   PPS
                     901     ;                       PPSFlag = 1;                                    //      PPS is enab
                             led for the 1st time only
                     902                             ; SOURCE LINE # 185
0045 900000   F      903             MOV     DPTR,#PPSFlag
0048 7401            904             MOV     A,#01H
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    16

004A F0              905             MOVX    @DPTR,A
                     906     ;               }
                     907                             ; SOURCE LINE # 186
004B                 908     ?C0023:
                     909     ;       }
                     910                             ; SOURCE LINE # 187
004B 8076            911             SJMP    ?C0024
004D                 912     ?C0022:
                     913     ;       else if(iso7816_buffer[0] == 0x00)
                     914                             ; SOURCE LINE # 188
004D 900000   F      915             MOV     DPTR,#iso7816_buffer
0050 E0              916             MOVX    A,@DPTR
0051 FF              917             MOV     R7,A
0052 EF              918             MOV     A,R7
0053 706E            919             JNZ     ?C0024
                     920     ;       {       
                     921                             ; SOURCE LINE # 189
                     922     ;               iso7816_buffer[1] = receive_byte();
                     923                             ; SOURCE LINE # 190
0055 120000   F      924             LCALL   receive_byte
0058 900000   F      925             MOV     DPTR,#iso7816_buffer+01H
005B EF              926             MOV     A,R7
005C F0              927             MOVX    @DPTR,A
                     928     ;               iso7816_buffer[2] = receive_byte();
                     929                             ; SOURCE LINE # 191
005D 120000   F      930             LCALL   receive_byte
0060 900000   F      931             MOV     DPTR,#iso7816_buffer+02H
0063 EF              932             MOV     A,R7
0064 F0              933             MOVX    @DPTR,A
                     934     ;               iso7816_buffer[3] = receive_byte();
                     935                             ; SOURCE LINE # 192
0065 120000   F      936             LCALL   receive_byte
0068 900000   F      937             MOV     DPTR,#iso7816_buffer+03H
006B EF              938             MOV     A,R7
006C F0              939             MOVX    @DPTR,A
                     940     ;               iso7816_buffer[4] = receive_byte();
                     941                             ; SOURCE LINE # 193
006D 120000   F      942             LCALL   receive_byte
0070 900000   F      943             MOV     DPTR,#iso7816_buffer+04H
0073 EF              944             MOV     A,R7
0074 F0              945             MOVX    @DPTR,A
                     946     ; 
                     947     ;               if((iso7816_buffer[1] == WRFLASH || iso7816_buffer[1] == UDFLASH || iso7816
                             _buffer[1] == ERFLASH || (iso7816_buffer[1] == DESOPER && iso7816_buffer[3] != 0x10)) && iso7816_buffer[4] != 0) 
                     948                             ; SOURCE LINE # 195
0075 900000   F      949             MOV     DPTR,#iso7816_buffer+01H
0078 E0              950             MOVX    A,@DPTR
0079 FF              951             MOV     R7,A
007A EF              952             MOV     A,R7
007B 6458            953             XRL     A,#058H
007D 6027            954             JZ      ?C0027
007F 900000   F      955             MOV     DPTR,#iso7816_buffer+01H
0082 E0              956             MOVX    A,@DPTR
0083 FF              957             MOV     R7,A
0084 EF              958             MOV     A,R7
0085 645C            959             XRL     A,#05CH
0087 601D            960             JZ      ?C0027
0089 900000   F      961             MOV     DPTR,#iso7816_buffer+01H
008C E0              962             MOVX    A,@DPTR
008D FF              963             MOV     R7,A
008E EF              964             MOV     A,R7
008F 642E            965             XRL     A,#02EH
0091 6013            966             JZ      ?C0027
0093 900000   F      967             MOV     DPTR,#iso7816_buffer+01H
0096 E0              968             MOVX    A,@DPTR
0097 FF              969             MOV     R7,A
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    17

0098 EF              970             MOV     A,R7
0099 B45624          971             CJNE    A,#056H,?C0026
009C 900000   F      972             MOV     DPTR,#iso7816_buffer+03H
009F E0              973             MOVX    A,@DPTR
00A0 FF              974             MOV     R7,A
00A1 EF              975             MOV     A,R7
00A2 6410            976             XRL     A,#010H
00A4 601A            977             JZ      ?C0026
00A6                 978     ?C0027:
00A6 900000   F      979             MOV     DPTR,#iso7816_buffer+04H
00A9 E0              980             MOVX    A,@DPTR
00AA FF              981             MOV     R7,A
00AB EF              982             MOV     A,R7
00AC 6012            983             JZ      ?C0026
                     984     ;               {                                                               
                     985                             ; SOURCE LINE # 196
                     986     ;                       send_byte(iso7816_buffer[1]);
                     987                             ; SOURCE LINE # 197
00AE 900000   F      988             MOV     DPTR,#iso7816_buffer+01H
00B1 E0              989             MOVX    A,@DPTR
00B2 FF              990             MOV     R7,A
00B3 120000   F      991             LCALL   _send_byte
                     992     ;                       Rx_n_Bytes(iso7816_buffer[4]);
                     993                             ; SOURCE LINE # 198
00B6 900000   F      994             MOV     DPTR,#iso7816_buffer+04H
00B9 E0              995             MOVX    A,@DPTR
00BA FF              996             MOV     R7,A
00BB 7E00            997             MOV     R6,#00H
00BD 120000   F      998             LCALL   _Rx_n_Bytes
                     999     ;               }
                    1000                             ; SOURCE LINE # 199
00C0                1001     ?C0026:
                    1002     ;               return  1;
                    1003                             ; SOURCE LINE # 200
00C0 7F01           1004             MOV     R7,#01H
00C2 22             1005             RET     
                    1006     ;       }
                    1007                             ; SOURCE LINE # 201
00C3                1008     ?C0025:
00C3                1009     ?C0024:
                    1010     ;       return  0;
                    1011                             ; SOURCE LINE # 202
00C3 7F00           1012             MOV     R7,#00H
                    1013     ; }
                    1014                             ; SOURCE LINE # 203
00C5                1015     ?C0028:
00C5 22             1016             RET     
                    1017     ; END OF RcvAPDU
                    1018     
                    1019     ; 
                    1020     ; //====================================================
                    1021     ; //    ISO/IEC 7816 commands handling
                    1022     ; //    Format: 00 5x P1 P2 P3 
                    1023     ; 
                    1024     ; USHORT        Command_Interpreter(BYTEX * buffer) {
                    1025     
----                1026             RSEG  ?PR?_Command_Interpreter?ISO7816_MAIN
0000                1027     _Command_Interpreter:
                    1028             USING   0
                    1029                             ; SOURCE LINE # 209
0000 900000   F     1030             MOV     DPTR,#buffer?541
0003 EE             1031             MOV     A,R6
0004 F0             1032             MOVX    @DPTR,A
0005 A3             1033             INC     DPTR
0006 EF             1034             MOV     A,R7
0007 F0             1035             MOVX    @DPTR,A
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    18

                    1036     ;       switch(buffer[0]) {
                    1037                             ; SOURCE LINE # 210
0008 900000   F     1038             MOV     DPTR,#buffer?541
000B E0             1039             MOVX    A,@DPTR
000C FE             1040             MOV     R6,A
000D A3             1041             INC     DPTR
000E E0             1042             MOVX    A,@DPTR
000F FF             1043             MOV     R7,A
0010 8F82           1044             MOV     DPL,R7
0012 8E83           1045             MOV     DPH,R6
0014 E0             1046             MOVX    A,@DPTR
0015 FF             1047             MOV     R7,A
0016 EF             1048             MOV     A,R7
0017 120000   F     1049             LCALL   ?C?CCASE
001A 0000     F     1050             DW      ?C0030
001C A0             1051             DB      0A0H
001D 0000           1052             DW      00H
001F 0000     F     1053             DW      ?C0032
                    1054     ;               //case 0xff:
                    1055     ;                       //return PPS_Handler(buffer);
                    1056     ;               case 0xa0:
                    1057                             ; SOURCE LINE # 213
0021                1058     ?C0030:
                    1059     ;                       return GSM_Handler(buffer);
                    1060                             ; SOURCE LINE # 214
0021 900000   F     1061             MOV     DPTR,#buffer?541
0024 E0             1062             MOVX    A,@DPTR
0025 FE             1063             MOV     R6,A
0026 A3             1064             INC     DPTR
0027 E0             1065             MOVX    A,@DPTR
0028 FF             1066             MOV     R7,A
0029 120000   F     1067             LCALL   _GSM_Handler
002C 22             1068             RET     
                    1069     ;               default:
                    1070                             ; SOURCE LINE # 215
002D                1071     ?C0032:
                    1072     ;                       return APDU_CLASS_INVALID;      
                    1073                             ; SOURCE LINE # 216
002D 7E6E           1074             MOV     R6,#06EH
002F 7F00           1075             MOV     R7,#00H
                    1076     ;       }
                    1077                             ; SOURCE LINE # 217
0031                1078     ?C0029:
                    1079     ; }
                    1080                             ; SOURCE LINE # 218
0031                1081     ?C0031:
0031 22             1082             RET     
                    1083     ; END OF _Command_Interpreter
                    1084     
                    1085     ; 
                    1086     ; USHORT GSM_Handler(BYTEX * buffer) {
                    1087     
----                1088             RSEG  ?PR?_GSM_Handler?ISO7816_MAIN
0000                1089     _GSM_Handler:
                    1090             USING   0
                    1091                             ; SOURCE LINE # 220
0000 900000   F     1092             MOV     DPTR,#buffer?642
0003 EE             1093             MOV     A,R6
0004 F0             1094             MOVX    @DPTR,A
0005 A3             1095             INC     DPTR
0006 EF             1096             MOV     A,R7
0007 F0             1097             MOVX    @DPTR,A
                    1098     ;       switch(buffer[1]) {
                    1099                             ; SOURCE LINE # 221
0008 900000   F     1100             MOV     DPTR,#buffer?642
000B E0             1101             MOVX    A,@DPTR
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    19

000C FE             1102             MOV     R6,A
000D A3             1103             INC     DPTR
000E E0             1104             MOVX    A,@DPTR
000F FF             1105             MOV     R7,A
0010 8F82           1106             MOV     DPL,R7
0012 8E83           1107             MOV     DPH,R6
0014 A3             1108             INC     DPTR
0015 E0             1109             MOVX    A,@DPTR
0016 FF             1110             MOV     R7,A
0017 8000           1111             SJMP    ?C0034
                    1112     ;               /*case 0xA4:            //select file
                    1113     ;                       return APDU_SUCCESS_RESPONSE;
                    1114     ;               case 0xF2:              //status
                    1115     ;                       return APDU_SUCCESS;
                    1116     ;               case 0xB0:              //read binary
                    1117     ;                       return APDU_SUCCESS;
                    1118     ;               case 0x*/
                    1119     ;               default:
                    1120                             ; SOURCE LINE # 229
0019                1121     ?C0034:
                    1122     ;                       return APDU_INSTRUCTION_INVALID;
                    1123                             ; SOURCE LINE # 230
0019 7E6D           1124             MOV     R6,#06DH
001B 7F00           1125             MOV     R7,#00H
                    1126     ;       }
                    1127                             ; SOURCE LINE # 231
001D                1128     ?C0033:
                    1129     ; }
                    1130                             ; SOURCE LINE # 232
001D                1131     ?C0035:
001D 22             1132             RET     
                    1133     ; END OF _GSM_Handler
                    1134     
                    1135     ; 
                    1136     ; USHORT PPS_Handler(BYTEX * buffer) {
                    1137     
----                1138             RSEG  ?PR?_PPS_Handler?ISO7816_MAIN
0000                1139     _PPS_Handler:
                    1140             USING   0
                    1141                             ; SOURCE LINE # 234
0000 900000   F     1142             MOV     DPTR,#buffer?743
0003 EE             1143             MOV     A,R6
0004 F0             1144             MOVX    @DPTR,A
0005 A3             1145             INC     DPTR
0006 EF             1146             MOV     A,R7
0007 F0             1147             MOVX    @DPTR,A
                    1148     ;       switch(buffer[1]) {
                    1149                             ; SOURCE LINE # 235
0008 900000   F     1150             MOV     DPTR,#buffer?743
000B E0             1151             MOVX    A,@DPTR
000C FE             1152             MOV     R6,A
000D A3             1153             INC     DPTR
000E E0             1154             MOVX    A,@DPTR
000F FF             1155             MOV     R7,A
0010 8F82           1156             MOV     DPL,R7
0012 8E83           1157             MOV     DPH,R6
0014 A3             1158             INC     DPTR
0015 E0             1159             MOVX    A,@DPTR
0016 FF             1160             MOV     R7,A
0017 EF             1161             MOV     A,R7
0018 120000   F     1162             LCALL   ?C?CCASE
001B 0000     F     1163             DW      ?C0037
001D 10             1164             DB      010H
001E 0000           1165             DW      00H
0020 0000     F     1166             DW      ?C0039
                    1167     ;               case 0x10:
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    20

                    1168                             ; SOURCE LINE # 236
0022                1169     ?C0037:
                    1170     ;                       Set_PPS(buffer);
                    1171                             ; SOURCE LINE # 237
0022 900000   F     1172             MOV     DPTR,#buffer?743
0025 E0             1173             MOVX    A,@DPTR
0026 FE             1174             MOV     R6,A
0027 A3             1175             INC     DPTR
0028 E0             1176             MOVX    A,@DPTR
0029 FF             1177             MOV     R7,A
002A 120000   F     1178             LCALL   _Set_PPS
                    1179     ;                       return APDU_SUCCESS;
                    1180                             ; SOURCE LINE # 238
002D 7E90           1181             MOV     R6,#090H
002F 7F00           1182             MOV     R7,#00H
0031 22             1183             RET     
                    1184     ;               default:   
                    1185                             ; SOURCE LINE # 239
0032                1186     ?C0039:
                    1187     ;                       return APDU_INSTRUCTION_INVALID;
                    1188                             ; SOURCE LINE # 240
0032 7E6D           1189             MOV     R6,#06DH
0034 7F00           1190             MOV     R7,#00H
                    1191     ;       }
                    1192                             ; SOURCE LINE # 241
0036                1193     ?C0036:
                    1194     ; }
                    1195                             ; SOURCE LINE # 242
0036                1196     ?C0038:
0036 22             1197             RET     
                    1198     ; END OF _PPS_Handler
                    1199     
                    1200     ; 
                    1201     ; void  CMMD_Handle(void)
                    1202     
----                1203             RSEG  ?PR?CMMD_Handle?ISO7816_MAIN
0000                1204     CMMD_Handle:
                    1205             USING   0
                    1206                             ; SOURCE LINE # 244
                    1207     ; {     
                    1208                             ; SOURCE LINE # 245
                    1209     ;       /*switch(INS)
                    1210     ;       {       
                    1211     ;               case    WRFLASH:        Write_Bytes((BYTEX *)Foffset,IOBuf,P3);            
                                                  
                    1212     ;                                                                                          
                                                                  break;
                    1213     ; 
                    1214     ;               case    ERFLASH:        Erase_Pages(Foffset,*(HALFWX *)IOBuf);             
                                                  
                    1215     ;                                                                                          
                                                                  break;
                    1216     ;                                                               
                    1217     ;               case    CHGBASE:        SetBase(P2);                                       
                                  break;                                                  
                    1218     ;                                                               
                    1219     ;               case    CRCCALL:        CalCRC(IOBuf,(BYTEX *)Foffset,P3);      break;
                    1220     ; 
                    1221     ;               case    RDFLASH:        ReadFlash(IOBuf,Foffset,P3);            break;
                    1222     ;               
                    1223     ;               case    UDFLASH:        UpdateFlash(Foffset,IOBuf,P3);          break;
                    1224     ; 
                    1225     ;               case    DESOPER:        if(DES_Operation(P1,P2,IOBuf,P3) == 0)
                    1226     ;                                                               SWptr = P1P2ERR;
                    1227     ;               case    0xF0:           ReturnToBL();                                      
                                  break;
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    21

                    1228     ; 
                    1229     ;               case    GETRDMN:        Random_Number_Generator(IOBuf,P3);      break;
                    1230     ;                                                                                       
                    1231     ;               default:                        SWptr = IVDINS;                            
                                          break;          //      6D00                                                    
                    1232     ;                                               
                    1233     ;       } */
                    1234     ; }
                    1235                             ; SOURCE LINE # 271
0000                1236     ?C0040:
0000 22             1237             RET     
                    1238     ; END OF CMMD_Handle
                    1239     
                    1240     ; 
                    1241     ; //====================================================
                    1242     ; //    Send status word
                    1243     ; void  TxStatus(unsigned char ptr)
                    1244     
----                1245             RSEG  ?PR?_TxStatus?ISO7816_MAIN
0000                1246     _TxStatus:
                    1247             USING   0
                    1248                             ; SOURCE LINE # 275
0000 900000   F     1249             MOV     DPTR,#ptr?944
0003 EF             1250             MOV     A,R7
0004 F0             1251             MOVX    @DPTR,A
                    1252     ; {
                    1253                             ; SOURCE LINE # 276
                    1254     ;       Tx_n_Bytes(2,SW+ptr);
                    1255                             ; SOURCE LINE # 277
0005 900000   F     1256             MOV     DPTR,#ptr?944
0008 E0             1257             MOVX    A,@DPTR
0009 FF             1258             MOV     R7,A
000A 7400     F     1259             MOV     A,#LOW (SW)
000C 2F             1260             ADD     A,R7
000D F9             1261             MOV     R1,A
000E E4             1262             CLR     A
000F 3400     F     1263             ADDC    A,#HIGH (SW)
0011 FA             1264             MOV     R2,A
0012 7BFF           1265             MOV     R3,#0FFH
0014 7F02           1266             MOV     R7,#02H
0016 7E00           1267             MOV     R6,#00H
0018 120000   F     1268             LCALL   _Tx_n_Bytes
                    1269     ; }
                    1270                             ; SOURCE LINE # 278
001B                1271     ?C0041:
001B 22             1272             RET     
                    1273     ; END OF _TxStatus
                    1274     
                    1275             END
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    22

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                T Y P E  V A L U E   ATTRIBUTES

?C0001. . . . . . . . . . . . . . . .  C ADDR   000FH   R   SEG=?PR?ISO7816_INIT?ISO7816_MAIN
?C0002. . . . . . . . . . . . . . . .  C ADDR   002EH   R   SEG=?PR?ISO7816_CASE?ISO7816_MAIN
?C0003. . . . . . . . . . . . . . . .  C ADDR   0013H   R   SEG=?PR?ISO7816_CASE?ISO7816_MAIN
?C0004. . . . . . . . . . . . . . . .  C ADDR   0030H   R   SEG=?PR?ISO7816_CASE?ISO7816_MAIN
?C0005. . . . . . . . . . . . . . . .  C ADDR   001FH   R   SEG=?PR?ISO7816_CASE?ISO7816_MAIN
?C0006. . . . . . . . . . . . . . . .  C ADDR   002BH   R   SEG=?PR?ISO7816_CASE?ISO7816_MAIN
?C0007. . . . . . . . . . . . . . . .  C ADDR   0127H   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
?C0008. . . . . . . . . . . . . . . .  C ADDR   0022H   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
?C0009. . . . . . . . . . . . . . . .  C ADDR   003AH   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
?C0010. . . . . . . . . . . . . . . .  C ADDR   003BH   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
?C0011. . . . . . . . . . . . . . . .  C ADDR   003CH   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
?C0012. . . . . . . . . . . . . . . .  C ADDR   004BH   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
?C0013. . . . . . . . . . . . . . . .  C ADDR   004CH   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
?C0014. . . . . . . . . . . . . . . .  C ADDR   00EFH   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
?C0015. . . . . . . . . . . . . . . .  C ADDR   005CH   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
?C0016. . . . . . . . . . . . . . . .  C ADDR   0066H   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
?C0017. . . . . . . . . . . . . . . .  C ADDR   00BCH   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
?C0018. . . . . . . . . . . . . . . .  C ADDR   00BCH   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
?C0019. . . . . . . . . . . . . . . .  C ADDR   00F9H   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
?C0020. . . . . . . . . . . . . . . .  C ADDR   0127H   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
?C0021. . . . . . . . . . . . . . . .  C ADDR   000DH   R   SEG=?PR?SEND_ATR?ISO7816_MAIN
?C0022. . . . . . . . . . . . . . . .  C ADDR   004DH   R   SEG=?PR?RCVAPDU?ISO7816_MAIN
?C0023. . . . . . . . . . . . . . . .  C ADDR   004BH   R   SEG=?PR?RCVAPDU?ISO7816_MAIN
?C0024. . . . . . . . . . . . . . . .  C ADDR   00C3H   R   SEG=?PR?RCVAPDU?ISO7816_MAIN
?C0025. . . . . . . . . . . . . . . .  C ADDR   00C3H   R   SEG=?PR?RCVAPDU?ISO7816_MAIN
?C0026. . . . . . . . . . . . . . . .  C ADDR   00C0H   R   SEG=?PR?RCVAPDU?ISO7816_MAIN
?C0027. . . . . . . . . . . . . . . .  C ADDR   00A6H   R   SEG=?PR?RCVAPDU?ISO7816_MAIN
?C0028. . . . . . . . . . . . . . . .  C ADDR   00C5H   R   SEG=?PR?RCVAPDU?ISO7816_MAIN
?C0029. . . . . . . . . . . . . . . .  C ADDR   0031H   R   SEG=?PR?_COMMAND_INTERPRETER?ISO7816_MAIN
?C0030. . . . . . . . . . . . . . . .  C ADDR   0021H   R   SEG=?PR?_COMMAND_INTERPRETER?ISO7816_MAIN
?C0031. . . . . . . . . . . . . . . .  C ADDR   0031H   R   SEG=?PR?_COMMAND_INTERPRETER?ISO7816_MAIN
?C0032. . . . . . . . . . . . . . . .  C ADDR   002DH   R   SEG=?PR?_COMMAND_INTERPRETER?ISO7816_MAIN
?C0033. . . . . . . . . . . . . . . .  C ADDR   001DH   R   SEG=?PR?_GSM_HANDLER?ISO7816_MAIN
?C0034. . . . . . . . . . . . . . . .  C ADDR   0019H   R   SEG=?PR?_GSM_HANDLER?ISO7816_MAIN
?C0035. . . . . . . . . . . . . . . .  C ADDR   001DH   R   SEG=?PR?_GSM_HANDLER?ISO7816_MAIN
?C0036. . . . . . . . . . . . . . . .  C ADDR   0036H   R   SEG=?PR?_PPS_HANDLER?ISO7816_MAIN
?C0037. . . . . . . . . . . . . . . .  C ADDR   0022H   R   SEG=?PR?_PPS_HANDLER?ISO7816_MAIN
?C0038. . . . . . . . . . . . . . . .  C ADDR   0036H   R   SEG=?PR?_PPS_HANDLER?ISO7816_MAIN
?C0039. . . . . . . . . . . . . . . .  C ADDR   0032H   R   SEG=?PR?_PPS_HANDLER?ISO7816_MAIN
?C0040. . . . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?CMMD_HANDLE?ISO7816_MAIN
?C0041. . . . . . . . . . . . . . . .  C ADDR   001BH   R   SEG=?PR?_TXSTATUS?ISO7816_MAIN
?C?CCASE. . . . . . . . . . . . . . .  C ADDR   -----       EXT
?CO?ISO7816_MAIN. . . . . . . . . . .    ----   -----       
?ISO7816_MAIN?BYTE. . . . . . . . . .  X ADDR   0000H   R   SEG=?XD?ISO7816_MAIN?ISO7816_MAIN
?PR?CMMD_HANDLE?ISO7816_MAIN. . . . .  C SEG    0001H       REL=UNIT
?PR?ISO7816_CASE?ISO7816_MAIN . . . .  C SEG    0031H       REL=UNIT
?PR?ISO7816_INIT?ISO7816_MAIN . . . .  C SEG    0010H       REL=UNIT
?PR?ISO7816_MAIN?ISO7816_MAIN . . . .  C SEG    0128H       REL=UNIT
?PR?RCVAPDU?ISO7816_MAIN. . . . . . .  C SEG    00C6H       REL=UNIT
?PR?SEND_ATR?ISO7816_MAIN . . . . . .  C SEG    000EH       REL=UNIT
?PR?_COMMAND_INTERPRETER?ISO7816_MAIN  C SEG    0032H       REL=UNIT
?PR?_GSM_HANDLER?ISO7816_MAIN . . . .  C SEG    001EH       REL=UNIT
?PR?_PPS_HANDLER?ISO7816_MAIN . . . .  C SEG    0037H       REL=UNIT
?PR?_TXSTATUS?ISO7816_MAIN. . . . . .  C SEG    001CH       REL=UNIT
?XD?ISO7816_MAIN. . . . . . . . . . .  X SEG    030DH       REL=UNIT
?XD?ISO7816_MAIN?ISO7816_MAIN . . . .  X SEG    0002H       REL=UNIT
?XD?_COMMAND_INTERPRETER?ISO7816_MAIN  X SEG    0002H       REL=UNIT
?XD?_GSM_HANDLER?ISO7816_MAIN . . . .  X SEG    0002H       REL=UNIT
?XD?_PPS_HANDLER?ISO7816_MAIN . . . .  X SEG    0002H       REL=UNIT
?XD?_TXSTATUS?ISO7816_MAIN. . . . . .  X SEG    0001H       REL=UNIT
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    23

?_COMMAND_INTERPRETER?BYTE. . . . . .  X ADDR   0000H   R   SEG=?XD?_COMMAND_INTERPRETER?ISO7816_MAIN
?_GSM_HANDLER?BYTE. . . . . . . . . .  X ADDR   0000H   R   SEG=?XD?_GSM_HANDLER?ISO7816_MAIN
?_IOMAN_TRANSMIT?BYTE . . . . . . . .  X ADDR   -----       EXT
?_PPS_HANDLER?BYTE. . . . . . . . . .  X ADDR   0000H   R   SEG=?XD?_PPS_HANDLER?ISO7816_MAIN
?_TXSTATUS?BYTE . . . . . . . . . . .  X ADDR   0000H   R   SEG=?XD?_TXSTATUS?ISO7816_MAIN
ACC . . . . . . . . . . . . . . . . .  D ADDR   00E0H   A   
AR7 . . . . . . . . . . . . . . . . .  D ADDR   0007H   A   
ATR . . . . . . . . . . . . . . . . .  X ADDR   030DH   R   SEG=?XD?ISO7816_MAIN
B . . . . . . . . . . . . . . . . . .  D ADDR   00F0H   A   
BANK_NUM. . . . . . . . . . . . . . .  D ADDR   00EEH   A   
BANK_SEL. . . . . . . . . . . . . . .  D ADDR   00EFH   A   
BUFFER?541. . . . . . . . . . . . . .  X ADDR   0000H   R   SEG=?XD?_COMMAND_INTERPRETER?ISO7816_MAIN
BUFFER?642. . . . . . . . . . . . . .  X ADDR   0000H   R   SEG=?XD?_GSM_HANDLER?ISO7816_MAIN
BUFFER?743. . . . . . . . . . . . . .  X ADDR   0000H   R   SEG=?XD?_PPS_HANDLER?ISO7816_MAIN
CHIPSC. . . . . . . . . . . . . . . .  D ADDR   00DBH   A   
CLKCON. . . . . . . . . . . . . . . .  D ADDR   0086H   A   
CLKSEL. . . . . . . . . . . . . . . .  D ADDR   008FH   A   
CMMD_HANDLE . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?CMMD_HANDLE?ISO7816_MAIN
CONST . . . . . . . . . . . . . . . .    ----   -----       
CRCDAT. . . . . . . . . . . . . . . .  D ADDR   00C2H   A   
DESCTL. . . . . . . . . . . . . . . .  D ADDR   00C0H   A   
DESD0 . . . . . . . . . . . . . . . .  D ADDR   00F8H   A   
DESD1 . . . . . . . . . . . . . . . .  D ADDR   00F9H   A   
DESD2 . . . . . . . . . . . . . . . .  D ADDR   00FAH   A   
DESD3 . . . . . . . . . . . . . . . .  D ADDR   00FBH   A   
DESD4 . . . . . . . . . . . . . . . .  D ADDR   00FCH   A   
DESD5 . . . . . . . . . . . . . . . .  D ADDR   00FDH   A   
DESD6 . . . . . . . . . . . . . . . .  D ADDR   00FEH   A   
DESD7 . . . . . . . . . . . . . . . .  D ADDR   00FFH   A   
DES_DATEN . . . . . . . . . . . . . .  B ADDR   00C0H.5 A   
DES_END . . . . . . . . . . . . . . .  B ADDR   00C0H.3 A   
DES_KEY1EN. . . . . . . . . . . . . .  B ADDR   00C0H.6 A   
DES_KEY2EN. . . . . . . . . . . . . .  B ADDR   00C0H.7 A   
DES_MODE. . . . . . . . . . . . . . .  B ADDR   00C0H.1 A   
DES_START . . . . . . . . . . . . . .  B ADDR   00C0H.0 A   
DES_TDES. . . . . . . . . . . . . . .  B ADDR   00C0H.2 A   
DPH . . . . . . . . . . . . . . . . .  D ADDR   0083H   A   
DPH0. . . . . . . . . . . . . . . . .  D ADDR   0083H   A   
DPH1. . . . . . . . . . . . . . . . .  D ADDR   0085H   A   
DPL . . . . . . . . . . . . . . . . .  D ADDR   0082H   A   
DPL0. . . . . . . . . . . . . . . . .  D ADDR   0082H   A   
DPL1. . . . . . . . . . . . . . . . .  D ADDR   0084H   A   
DPS . . . . . . . . . . . . . . . . .  D ADDR   00A2H   A   
ENDTIMEOUTSEQUENCE. . . . . . . . . .  C ADDR   -----       EXT
FDCON . . . . . . . . . . . . . . . .  D ADDR   00E3H   A   
FLASHBUFFER . . . . . . . . . . . . .  X ADDR   010AH   R   SEG=?XD?ISO7816_MAIN
FL_CON. . . . . . . . . . . . . . . .  D ADDR   00EBH   A   
FL_PATCH. . . . . . . . . . . . . . .  D ADDR   00E7H   A   
FL_SDP1 . . . . . . . . . . . . . . .  D ADDR   00E9H   A   
FL_SDP2 . . . . . . . . . . . . . . .  D ADDR   00EAH   A   
FL_STS. . . . . . . . . . . . . . . .  D ADDR   00E8H   A   
FL_STS_F_CHKFF_ERR. . . . . . . . . .  B ADDR   00E8H.2 A   
FL_STS_F_OP_ERR . . . . . . . . . . .  B ADDR   00E8H.1 A   
FL_STS_F_OVER . . . . . . . . . . . .  B ADDR   00E8H.0 A   
FOFFSET . . . . . . . . . . . . . . .  X ADDR   030AH   R   SEG=?XD?ISO7816_MAIN
GSM_CLASS_CASE. . . . . . . . . . . .  C ADDR   -----       EXT
IE. . . . . . . . . . . . . . . . . .  D ADDR   00A8H   A   
IE_DES. . . . . . . . . . . . . . . .  B ADDR   00A8H.0 A   
IE_EA . . . . . . . . . . . . . . . .  B ADDR   00A8H.7 A   
IE_FLASH. . . . . . . . . . . . . . .  B ADDR   00A8H.4 A   
IE_INT3 . . . . . . . . . . . . . . .  B ADDR   00A8H.3 A   
IE_INT5 . . . . . . . . . . . . . . .  B ADDR   00A8H.5 A   
IE_TMR0 . . . . . . . . . . . . . . .  B ADDR   00A8H.1 A   
IE_UART . . . . . . . . . . . . . . .  B ADDR   00A8H.2 A   
IE_WDT. . . . . . . . . . . . . . . .  B ADDR   00A8H.6 A   
INITIALIZE_HARDWARE . . . . . . . . .  C ADDR   -----       EXT
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    24

INITIALIZE_OPERATING_SYSTEM . . . . .  C ADDR   -----       EXT
IP. . . . . . . . . . . . . . . . . .  D ADDR   00B8H   A   
ISO7816_BUFFER. . . . . . . . . . . .  X ADDR   0000H   R   SEG=?XD?ISO7816_MAIN
ISO7816_CASE. . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?ISO7816_CASE?ISO7816_MAIN
ISO7816_INIT. . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?ISO7816_INIT?ISO7816_MAIN
ISO7816_MAIN. . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?ISO7816_MAIN?ISO7816_MAIN
LOAD_USER_APP . . . . . . . . . . . .  C ADDR   -----       EXT
MMU_SEL . . . . . . . . . . . . . . .  D ADDR   00C3H   A   
PCON. . . . . . . . . . . . . . . . .  D ADDR   0087H   A   
PPS . . . . . . . . . . . . . . . . .  C ADDR   -----       EXT
PPSFLAG . . . . . . . . . . . . . . .  X ADDR   030CH   R   SEG=?XD?ISO7816_MAIN
PSW . . . . . . . . . . . . . . . . .  D ADDR   00D0H   A   
PTR?944 . . . . . . . . . . . . . . .  X ADDR   0000H   R   SEG=?XD?_TXSTATUS?ISO7816_MAIN
RCVAPDU . . . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?RCVAPDU?ISO7816_MAIN
RECEIVE_BYTE. . . . . . . . . . . . .  C ADDR   -----       EXT
RESPONSE_LENGTH . . . . . . . . . . .  X ADDR   -----       EXT
RNGCTL. . . . . . . . . . . . . . . .  D ADDR   00E1H   A   
RNGDAT. . . . . . . . . . . . . . . .  D ADDR   00E2H   A   
RP0 . . . . . . . . . . . . . . . . .  D ADDR   0080H   A   
RP1 . . . . . . . . . . . . . . . . .  D ADDR   0090H   A   
RP2 . . . . . . . . . . . . . . . . .  D ADDR   00A0H   A   
RP3 . . . . . . . . . . . . . . . . .  D ADDR   00B0H   A   
SAVE_STATE. . . . . . . . . . . . . .  C ADDR   -----       EXT
SEND_ATR. . . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?SEND_ATR?ISO7816_MAIN
SFR80 . . . . . . . . . . . . . . . .  D ADDR   0080H   A   
SFR81 . . . . . . . . . . . . . . . .  D ADDR   0081H   A   
SFR82 . . . . . . . . . . . . . . . .  D ADDR   0082H   A   
SFR83 . . . . . . . . . . . . . . . .  D ADDR   0083H   A   
SFR84 . . . . . . . . . . . . . . . .  D ADDR   0084H   A   
SFR85 . . . . . . . . . . . . . . . .  D ADDR   0085H   A   
SFR86 . . . . . . . . . . . . . . . .  D ADDR   0086H   A   
SFR87 . . . . . . . . . . . . . . . .  D ADDR   0087H   A   
SFR88 . . . . . . . . . . . . . . . .  D ADDR   0088H   A   
SFR89 . . . . . . . . . . . . . . . .  D ADDR   0089H   A   
SFR8A . . . . . . . . . . . . . . . .  D ADDR   008AH   A   
SFR8B . . . . . . . . . . . . . . . .  D ADDR   008BH   A   
SFR8C . . . . . . . . . . . . . . . .  D ADDR   008CH   A   
SFR8D . . . . . . . . . . . . . . . .  D ADDR   008DH   A   
SFR8E . . . . . . . . . . . . . . . .  D ADDR   008EH   A   
SFR8F . . . . . . . . . . . . . . . .  D ADDR   008FH   A   
SFR90 . . . . . . . . . . . . . . . .  D ADDR   0090H   A   
SFR91 . . . . . . . . . . . . . . . .  D ADDR   0091H   A   
SFR92 . . . . . . . . . . . . . . . .  D ADDR   0092H   A   
SFR93 . . . . . . . . . . . . . . . .  D ADDR   0093H   A   
SFR94 . . . . . . . . . . . . . . . .  D ADDR   0094H   A   
SFR95 . . . . . . . . . . . . . . . .  D ADDR   0095H   A   
SFR96 . . . . . . . . . . . . . . . .  D ADDR   0096H   A   
SFR97 . . . . . . . . . . . . . . . .  D ADDR   0097H   A   
SFR98 . . . . . . . . . . . . . . . .  D ADDR   0098H   A   
SFR99 . . . . . . . . . . . . . . . .  D ADDR   0099H   A   
SFR9A . . . . . . . . . . . . . . . .  D ADDR   009AH   A   
SFR9B . . . . . . . . . . . . . . . .  D ADDR   009BH   A   
SFR9C . . . . . . . . . . . . . . . .  D ADDR   009CH   A   
SFR9D . . . . . . . . . . . . . . . .  D ADDR   009DH   A   
SFR9E . . . . . . . . . . . . . . . .  D ADDR   009EH   A   
SFR9F . . . . . . . . . . . . . . . .  D ADDR   009FH   A   
SFRA0 . . . . . . . . . . . . . . . .  D ADDR   00A0H   A   
SFRA1 . . . . . . . . . . . . . . . .  D ADDR   00A1H   A   
SFRA2 . . . . . . . . . . . . . . . .  D ADDR   00A2H   A   
SFRA3 . . . . . . . . . . . . . . . .  D ADDR   00A3H   A   
SFRA4 . . . . . . . . . . . . . . . .  D ADDR   00A4H   A   
SFRA5 . . . . . . . . . . . . . . . .  D ADDR   00A5H   A   
SFRA6 . . . . . . . . . . . . . . . .  D ADDR   00A6H   A   
SFRA7 . . . . . . . . . . . . . . . .  D ADDR   00A7H   A   
SFRA8 . . . . . . . . . . . . . . . .  D ADDR   00A8H   A   
SFRA9 . . . . . . . . . . . . . . . .  D ADDR   00A9H   A   
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    25

SFRAA . . . . . . . . . . . . . . . .  D ADDR   00AAH   A   
SFRAB . . . . . . . . . . . . . . . .  D ADDR   00ABH   A   
SFRAC . . . . . . . . . . . . . . . .  D ADDR   00ACH   A   
SFRAD . . . . . . . . . . . . . . . .  D ADDR   00ADH   A   
SFRAE . . . . . . . . . . . . . . . .  D ADDR   00AEH   A   
SFRAF . . . . . . . . . . . . . . . .  D ADDR   00AFH   A   
SFRB0 . . . . . . . . . . . . . . . .  D ADDR   00B0H   A   
SFRB1 . . . . . . . . . . . . . . . .  D ADDR   00B1H   A   
SFRB2 . . . . . . . . . . . . . . . .  D ADDR   00B2H   A   
SFRB3 . . . . . . . . . . . . . . . .  D ADDR   00B3H   A   
SFRB4 . . . . . . . . . . . . . . . .  D ADDR   00B4H   A   
SFRB5 . . . . . . . . . . . . . . . .  D ADDR   00B5H   A   
SFRB6 . . . . . . . . . . . . . . . .  D ADDR   00B6H   A   
SFRB7 . . . . . . . . . . . . . . . .  D ADDR   00B7H   A   
SFRB8 . . . . . . . . . . . . . . . .  D ADDR   00B8H   A   
SFRB9 . . . . . . . . . . . . . . . .  D ADDR   00B9H   A   
SFRBA . . . . . . . . . . . . . . . .  D ADDR   00BAH   A   
SFRBB . . . . . . . . . . . . . . . .  D ADDR   00BBH   A   
SFRBC . . . . . . . . . . . . . . . .  D ADDR   00BCH   A   
SFRBD . . . . . . . . . . . . . . . .  D ADDR   00BDH   A   
SFRBE . . . . . . . . . . . . . . . .  D ADDR   00BEH   A   
SFRBF . . . . . . . . . . . . . . . .  D ADDR   00BFH   A   
SFRC0 . . . . . . . . . . . . . . . .  D ADDR   00C0H   A   
SFRC1 . . . . . . . . . . . . . . . .  D ADDR   00C1H   A   
SFRC2 . . . . . . . . . . . . . . . .  D ADDR   00C2H   A   
SFRC3 . . . . . . . . . . . . . . . .  D ADDR   00C3H   A   
SFRC4 . . . . . . . . . . . . . . . .  D ADDR   00C4H   A   
SFRC5 . . . . . . . . . . . . . . . .  D ADDR   00C5H   A   
SFRC6 . . . . . . . . . . . . . . . .  D ADDR   00C6H   A   
SFRC7 . . . . . . . . . . . . . . . .  D ADDR   00C7H   A   
SFRC8 . . . . . . . . . . . . . . . .  D ADDR   00C8H   A   
SFRC9 . . . . . . . . . . . . . . . .  D ADDR   00C9H   A   
SFRCA . . . . . . . . . . . . . . . .  D ADDR   00CAH   A   
SFRCB . . . . . . . . . . . . . . . .  D ADDR   00CBH   A   
SFRCC . . . . . . . . . . . . . . . .  D ADDR   00CCH   A   
SFRCD . . . . . . . . . . . . . . . .  D ADDR   00CDH   A   
SFRCE . . . . . . . . . . . . . . . .  D ADDR   00CEH   A   
SFRCF . . . . . . . . . . . . . . . .  D ADDR   00CFH   A   
SFRD0 . . . . . . . . . . . . . . . .  D ADDR   00D0H   A   
SFRD1 . . . . . . . . . . . . . . . .  D ADDR   00D1H   A   
SFRD2 . . . . . . . . . . . . . . . .  D ADDR   00D2H   A   
SFRD3 . . . . . . . . . . . . . . . .  D ADDR   00D3H   A   
SFRD4 . . . . . . . . . . . . . . . .  D ADDR   00D4H   A   
SFRD5 . . . . . . . . . . . . . . . .  D ADDR   00D5H   A   
SFRD6 . . . . . . . . . . . . . . . .  D ADDR   00D6H   A   
SFRD7 . . . . . . . . . . . . . . . .  D ADDR   00D7H   A   
SFRD8 . . . . . . . . . . . . . . . .  D ADDR   00D8H   A   
SFRD9 . . . . . . . . . . . . . . . .  D ADDR   00D9H   A   
SFRDA . . . . . . . . . . . . . . . .  D ADDR   00DAH   A   
SFRDB . . . . . . . . . . . . . . . .  D ADDR   00DBH   A   
SFRDC . . . . . . . . . . . . . . . .  D ADDR   00DCH   A   
SFRDD . . . . . . . . . . . . . . . .  D ADDR   00DDH   A   
SFRDE . . . . . . . . . . . . . . . .  D ADDR   00DEH   A   
SFRDF . . . . . . . . . . . . . . . .  D ADDR   00DFH   A   
SFRE0 . . . . . . . . . . . . . . . .  D ADDR   00E0H   A   
SFRE1 . . . . . . . . . . . . . . . .  D ADDR   00E1H   A   
SFRE2 . . . . . . . . . . . . . . . .  D ADDR   00E2H   A   
SFRE3 . . . . . . . . . . . . . . . .  D ADDR   00E3H   A   
SFRE4 . . . . . . . . . . . . . . . .  D ADDR   00E4H   A   
SFRE5 . . . . . . . . . . . . . . . .  D ADDR   00E5H   A   
SFRE6 . . . . . . . . . . . . . . . .  D ADDR   00E6H   A   
SFRE7 . . . . . . . . . . . . . . . .  D ADDR   00E7H   A   
SFRE8 . . . . . . . . . . . . . . . .  D ADDR   00E8H   A   
SFRE9 . . . . . . . . . . . . . . . .  D ADDR   00E9H   A   
SFREA . . . . . . . . . . . . . . . .  D ADDR   00EAH   A   
SFREB . . . . . . . . . . . . . . . .  D ADDR   00EBH   A   
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    26

SFREC . . . . . . . . . . . . . . . .  D ADDR   00ECH   A   
SFRED . . . . . . . . . . . . . . . .  D ADDR   00EDH   A   
SFREE . . . . . . . . . . . . . . . .  D ADDR   00EEH   A   
SFREF . . . . . . . . . . . . . . . .  D ADDR   00EFH   A   
SFRF0 . . . . . . . . . . . . . . . .  D ADDR   00F0H   A   
SFRF1 . . . . . . . . . . . . . . . .  D ADDR   00F1H   A   
SFRF2 . . . . . . . . . . . . . . . .  D ADDR   00F2H   A   
SFRF3 . . . . . . . . . . . . . . . .  D ADDR   00F3H   A   
SFRF4 . . . . . . . . . . . . . . . .  D ADDR   00F4H   A   
SFRF5 . . . . . . . . . . . . . . . .  D ADDR   00F5H   A   
SFRF6 . . . . . . . . . . . . . . . .  D ADDR   00F6H   A   
SFRF7 . . . . . . . . . . . . . . . .  D ADDR   00F7H   A   
SFRF8 . . . . . . . . . . . . . . . .  D ADDR   00F8H   A   
SFRF9 . . . . . . . . . . . . . . . .  D ADDR   00F9H   A   
SFRFA . . . . . . . . . . . . . . . .  D ADDR   00FAH   A   
SFRFB . . . . . . . . . . . . . . . .  D ADDR   00FBH   A   
SFRFC . . . . . . . . . . . . . . . .  D ADDR   00FCH   A   
SFRFD . . . . . . . . . . . . . . . .  D ADDR   00FDH   A   
SFRFE . . . . . . . . . . . . . . . .  D ADDR   00FEH   A   
SFRFF . . . . . . . . . . . . . . . .  D ADDR   00FFH   A   
SLEEP . . . . . . . . . . . . . . . .  D ADDR   0097H   A   
SLEEP_MODE. . . . . . . . . . . . . .  C ADDR   -----       EXT
SP. . . . . . . . . . . . . . . . . .  D ADDR   0081H   A   
STARTTIMEOUTSEQUENCE. . . . . . . . .  C ADDR   -----       EXT
SW. . . . . . . . . . . . . . . . . .  X ADDR   030DH   R   SEG=?XD?ISO7816_MAIN
SW?240. . . . . . . . . . . . . . . .  X ADDR   0000H   R   SEG=?XD?ISO7816_MAIN?ISO7816_MAIN
SWPTR . . . . . . . . . . . . . . . .  X ADDR   0106H   R   SEG=?XD?ISO7816_MAIN
TCON. . . . . . . . . . . . . . . . .  D ADDR   0088H   A   
TCON_TF0. . . . . . . . . . . . . . .  B ADDR   0088H.5 A   
TCON_TR0. . . . . . . . . . . . . . .  B ADDR   0088H.4 A   
TH0 . . . . . . . . . . . . . . . . .  D ADDR   008CH   A   
TL0 . . . . . . . . . . . . . . . . .  D ADDR   008AH   A   
TMOD. . . . . . . . . . . . . . . . .  D ADDR   0089H   A   
UBRC. . . . . . . . . . . . . . . . .  D ADDR   00DAH   A   
UBUF. . . . . . . . . . . . . . . . .  D ADDR   00D9H   A   
UCR . . . . . . . . . . . . . . . . .  D ADDR   00DFH   A   
UCR2. . . . . . . . . . . . . . . . .  D ADDR   00DEH   A   
UCR3. . . . . . . . . . . . . . . . .  D ADDR   00DDH   A   
UIMSK . . . . . . . . . . . . . . . .  D ADDR   00DCH   A   
USR . . . . . . . . . . . . . . . . .  D ADDR   00D8H   A   
USR_TBE . . . . . . . . . . . . . . .  B ADDR   00D8H.0 A   
VDCON . . . . . . . . . . . . . . . .  D ADDR   00DBH   A   
WDTCON. . . . . . . . . . . . . . . .  D ADDR   00A5H   A   
WDTRST. . . . . . . . . . . . . . . .  D ADDR   00A6H   A   
YGGDRASIL_CLASS_CASE. . . . . . . . .  C ADDR   -----       EXT
_COMMAND_INTERPRETER. . . . . . . . .  C ADDR   0000H   R   SEG=?PR?_COMMAND_INTERPRETER?ISO7816_MAIN
_GSM_HANDLER. . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?_GSM_HANDLER?ISO7816_MAIN
_IOINIT . . . . . . . . . . . . . . .  C ADDR   -----       EXT
_IOMAN_TRANSMIT . . . . . . . . . . .  C ADDR   -----       EXT
_ISO7816_CLA. . . . . . . . . . . . .  X ADDR   0108H   R   SEG=?XD?ISO7816_MAIN
_ISO7816_INS. . . . . . . . . . . . .  X ADDR   0109H   R   SEG=?XD?ISO7816_MAIN
_ISO7816_STATE. . . . . . . . . . . .  X ADDR   0107H   R   SEG=?XD?ISO7816_MAIN
_ISO_AUTOTXNULL . . . . . . . . . . .  C ADDR   -----       EXT
_OS_CONFIG. . . . . . . . . . . . . .  X ADDR   -----       EXT
_PPS_HANDLER. . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?_PPS_HANDLER?ISO7816_MAIN
_RX_N_BYTES . . . . . . . . . . . . .  C ADDR   -----       EXT
_SEND_BYTE. . . . . . . . . . . . . .  C ADDR   -----       EXT
_SET_PPS. . . . . . . . . . . . . . .  C ADDR   -----       EXT
_TXSTATUS . . . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?_TXSTATUS?ISO7816_MAIN
_TX_N_BYTES . . . . . . . . . . . . .  C ADDR   -----       EXT
_YGGDRASIL_DECODE . . . . . . . . . .  C ADDR   -----       EXT


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 28 ERROR(S)
A51 MACRO ASSEMBLER  ISO7816_MAIN                                                         01/17/2013 14:03:47 PAGE    27

