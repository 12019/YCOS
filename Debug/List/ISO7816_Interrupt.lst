C51 COMPILER V7.01  ISO7816_INTERRUPT                                                      01/27/2014 09:14:17 PAGE 1   


C51 COMPILER V7.01, COMPILATION OF MODULE ISO7816_INTERRUPT
OBJECT MODULE PLACED IN ISO7816\ISO7816_Interrupt.OBJ
COMPILER INVOKED BY: C:\Keil51\C51\BIN\C51.EXE ISO7816\ISO7816_Interrupt.c LARGE OMF2 OPTIMIZE(0,SIZE) BROWSE NOINTVECTO
                    -R DEBUG PRINT(.\Debug\List\ISO7816_Interrupt.lst) SRC(.\Debug\Output\ISO7816_Interrupt.SRC)

stmt level    source

   1          
   2          #include        "_17BD_UserCode.h"  
   3          #include        "defs.h"
   4          #include        "..\ISO7816\ISO7816.h"
   5          #include        "..\NORFlash\NORFlash.h"
   6          #include        "..\yggdrasil\yggdrasil.h"
   7          #include        <intrins.h>
   8          
   9          //====================================================
  10          //      DES finish interrutp service routine
  11          void    DES_ISR(void)   interrupt 0
  12          {
  13   1              IE_DES = 0;
  14   1              return;
  15   1      }
  16          
  17          //uint16 _tick_counter;
  18          static uchar rcv_index = 0;
  19          #define apdu_data_buffer (iso7816_buffer+5)
  20          #define apdu_le_value *(iso7816_buffer+262)
  21          //====================================================
  22          //      UART interrutp service routine
  23          void    UART_ISR(void)  interrupt 2
  24          {
  25   1              IE_UART = 0;  
  26   1              //switch(_iso7816_state) {
  27   1                      //case ISO7816_RECEIVE_CMD:     
  28   1              if(_iso7816_state == ISO7816_RECEIVE_CMD) { 
  29   2                              iso7816_buffer[rcv_index++] = UBUF;
  30   2                              if(rcv_index == 5) {
  31   3                                      //_iso7816_case = 1;                    //command only                   
  32   3                                      /*_iso7816_cla = iso7816_buffer[0];
  33   3                                      _iso7816_ins = iso7816_buffer[1];
  34   3                                      if(ISO7816_case() > 1) {                //check for command with data
  35   3                                              _iso7816_state = ISO7816_SEND_ACK;
  36   3                                              rcv_index =0;
  37   3                                      } else {
  38   3                                              _iso7816_state = ISO7816_RUNNING;
  39   3                                              rcv_index=0;
  40   3                                      }*/
  41   3                                      rcv_index=0; 
  42   3                                      //apdu_le_value = 0;
  43   3                                      _iso7816_state = ISO7816_RUNNING;
  44   3                              } 
  45   2                              if(iso7816_buffer[0] == 0xff && rcv_index == 4) {       //pps
  46   3                                      rcv_index=0;  
  47   3                                      _iso7816_state = ISO7816_RUNNING;       
  48   3                              }  
  49   2                              //break;
  50   2              } else if(_iso7816_state == ISO7816_RECEIVE_DATA) {
  51   2                      //case ISO7816_RECEIVE_DATA:      
  52   2                              apdu_data_buffer[rcv_index++] = UBUF;
  53   2                              if(rcv_index == iso7816_buffer[4]) {
  54   3                                      //apdu_le_value = 0;
C51 COMPILER V7.01  ISO7816_INTERRUPT                                                      01/27/2014 09:14:17 PAGE 2   

  55   3                                      _iso7816_state = ISO7816_RUNNING;
  56   3                                      rcv_index=0;
  57   3                              }
  58   2                              //break;        
  59   2                      /*case ISO7816_WAIT_LE:
  60   2                              apdu_le_value = UBUF;
  61   2                              _iso7816_state = ISO7816_RUNNING;
  62   2                              rcv_index=0;
  63   2                              break; */
  64   2              }
  65   1              IE_UART = 1;
  66   1              return;
  67   1      }
  68          
  69          //====================================================
  70          //      Interrutp 3 interrutp service routine
  71          void    INT3_ISR(void)  interrupt 3
  72          {
  73   1              IE_INT3 = 0;
  74   1              return;
  75   1      }
  76          
  77          //====================================================
  78          //      Flash write finish interrutp service routine
  79          void    FLASH_ISR(void) interrupt 4
  80          {
  81   1              IE_FLASH = 0;
  82   1              return;
  83   1      }
  84          
  85          //====================================================
  86          //      Interrutp 5 service routine
  87          void    INT5_ISR(void)  interrupt 5
  88          {
  89   1              IE_INT5 = 0;
  90   1              return;
  91   1      }
  92          
  93          //====================================================
  94          //      Watch dog interrutp service routine
  95          void    WDT_ISR(void)   interrupt 6
  96          {
  97   1              IE_WDT = 0;
  98   1              TX_NULL_BYTE_OFF(8000)
  99   1              IE_WDT = 1;
 100   1              return;
 101   1      }
 102          
 103          
 104          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    250    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
C51 COMPILER V7.01  ISO7816_INTERRUPT                                                      01/27/2014 09:14:17 PAGE 3   

   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
