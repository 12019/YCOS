C51 COMPILER V7.01  ALGORITHM                                                              01/25/2014 09:07:15 PAGE 1   


C51 COMPILER V7.01, COMPILATION OF MODULE ALGORITHM
OBJECT MODULE PLACED IN .\Debug\Output\algorithm.obj
COMPILER INVOKED BY: C:\Keil51\C51\BIN\C51.EXE misc\algorithm.c LARGE OMF2 OPTIMIZE(9,SIZE) BROWSE NOINTVECTOR DEBUG PRI
                    -NT(.\Debug\List\algorithm.lst) OBJECT(.\Debug\Output\algorithm.obj)

stmt level    source

   1          #include "..\defs.h"
   2          #include "..\midgard\midgard.h"
   3          #include "algorithm.h"
   4          
   5          void KMP_preprocess(uchar *x, uchar m, int16 kmpNext[]) _REENTRANT_  {
   6   1         int16 i, j;
   7   1      
   8   1         i = 0;
   9   1         j = kmpNext[0] = -1;
  10   1         while (i < m) {
  11   2            while (j > -1 && x[i] != x[j])
  12   2               j = kmpNext[j];
  13   2            i++;
  14   2            j++;
  15   2            if (x[i] == x[j])
  16   2               kmpNext[i] = kmpNext[j];
  17   2            else
  18   2               kmpNext[i] = j;
  19   2         }
  20   1      }
  21          
  22          
  23          //KMP(pattern, kmpstates, pattern_length, text, text_length)
  24          int16 KMP_search(uchar *x, int16 kmpNext[], uchar m, uchar *y, uchar n) _REENTRANT_  {
  25   1         int16 i, j; //kmpNext[XSIZE];                //XSIZE kemungkinan m+1
  26   1         //int8 * kmpNext;
  27   1         //kmpNext = (int8 *)m_alloc((m+1) * sizeof(int8));
  28   1         /* Preprocessing */
  29   1         //preKmp(x, m, kmpNext);
  30   1      
  31   1         /* Searching */
  32   1         i = j = 0;
  33   1         while (j < n) {
  34   2            while ((i != 0xffff) && (x[i] != y[j])) {
  35   3               i = kmpNext[i];
  36   3                      }
  37   2            i++;
  38   2            j++;
  39   2            if (i >= m) {
  40   3               //OUTPUT(j - i);
  41   3                       //m_free(kmpNext);
  42   3                      return j-i;
  43   3               i = kmpNext[i];
  44   3            }
  45   2         }
  46   1         //m_free(kmpNext);
  47   1              return -1;
  48   1      }
  49          
  50          
  51          


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V7.01  ALGORITHM                                                              01/25/2014 09:07:15 PAGE 2   

   CODE SIZE        =    516    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
