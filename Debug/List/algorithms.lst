C51 COMPILER V7.01  ALGORITHMS                                                             01/14/2013 08:01:18 PAGE 1   


C51 COMPILER V7.01, COMPILATION OF MODULE ALGORITHMS
OBJECT MODULE PLACED IN .\Debug\Output\algorithms.obj
COMPILER INVOKED BY: C:\Keil51\C51\BIN\C51.EXE misc\algorithms.c LARGE OMF2 OPTIMIZE(SIZE) REGFILE(.\Debug\Output\Yggdra
                    -sil20.ORC) BROWSE NOINTVECTOR DEBUG PRINT(.\Debug\List\algorithms.lst) OBJECT(.\Debug\Output\algorithms.obj)

stmt level    source

   1          #include "..\defs.h"
*** WARNING C245 IN LINE 4 OF MISC\..\DEFS.H: unknown #pragma, line ignored
*** WARNING C245 IN LINE 5 OF MISC\..\DEFS.H: unknown #pragma, line ignored
*** WARNING C245 IN LINE 6 OF MISC\..\DEFS.H: unknown #pragma, line ignored
*** WARNING C245 IN LINE 7 OF MISC\..\DEFS.H: unknown #pragma, line ignored
   2          #include "..\midgard\midgard.h"
   3          
   4          void preKmp(uchar *x, uchar m, int8 kmpNext[]) {
   5   1         int8 i, j;
   6   1      
   7   1         i = 0;
   8   1         j = kmpNext[0] = -1;
   9   1         while (i < m) {
  10   2            while (j > -1 && x[i] != x[j])
  11   2               j = kmpNext[j];
  12   2            i++;
  13   2            j++;
  14   2            if (x[i] == x[j])
  15   2               kmpNext[i] = kmpNext[j];
  16   2            else
  17   2               kmpNext[i] = j;
  18   2         }
  19   1      }
  20          
  21          
  22          //KMP(pattern, pattern_length, text, text_length)
  23          uint16 KMP_search(uchar *x, uchar m, uchar *y, uchar n) {
  24   1         int8 i, j; //kmpNext[XSIZE];         //XSIZE kemungkinan m+1
  25   1         int8 * kmpNext;
  26   1         kmpNext = (int16 *)m_alloc((m+1) * sizeof(int8));
*** WARNING C182 IN LINE 26 OF MISC\ALGORITHMS.C: pointer to different objects
  27   1         /* Preprocessing */
  28   1         preKmp(x, m, kmpNext);
  29   1      
  30   1         /* Searching */
  31   1         i = j = 0;
  32   1         while (j < n) {
  33   2            while (i > -1 && x[i] != y[j])
  34   2               i = kmpNext[i];
  35   2            i++;
  36   2            j++;
  37   2            if (i >= m) {
  38   3               //OUTPUT(j - i);
  39   3                       m_free(kmpNext);
  40   3                      return j-i;
  41   3               i = kmpNext[i];
  42   3            }
  43   2         }
  44   1         m_free(kmpNext);
  45   1              return -1;
  46   1      }
  47          
  48          
  49          
C51 COMPILER V7.01  ALGORITHMS                                                             01/14/2013 08:01:18 PAGE 2   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    362    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      20
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  5 WARNING(S),  0 ERROR(S)
